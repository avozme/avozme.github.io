I"	ë<h2 class="no_toc" id="35-autenticaci√≥n-mediante-acl">3.5. Autenticaci√≥n mediante ACL</h2>

<ul id="markdown-toc">
  <li><a href="#351-qu√©-es-la-autenticaci√≥n-mediante-acl" id="markdown-toc-351-qu√©-es-la-autenticaci√≥n-mediante-acl">3.5.1. Qu√© es la autenticaci√≥n mediante ACL</a></li>
  <li><a href="#352-una-implementaci√≥n-de-autenticaci√≥n-mediante-acl" id="markdown-toc-352-una-implementaci√≥n-de-autenticaci√≥n-mediante-acl">3.5.2. Una implementaci√≥n de autenticaci√≥n mediante ACL</a>    <ul>
      <li><a href="#nuestras-tablas-acl" id="markdown-toc-nuestras-tablas-acl">Nuestras tablas ACL</a></li>
      <li><a href="#c√≥digo-fuente-de-nuestra-implementaci√≥n" id="markdown-toc-c√≥digo-fuente-de-nuestra-implementaci√≥n">C√≥digo fuente de nuestra implementaci√≥n</a></li>
    </ul>
  </li>
</ul>

<p>En esta secci√≥n, vamos a poner en pr√°ctica muchas de las cosas que hemos visto en este tema mediante un caso pr√°ctico realista y completamente resuelto.</p>

<p>Completamente resuelto pero mejorable, porque una aplicaci√≥n inform√°tica <em>siempre</em> se puede mejorar.</p>

<p>De hecho, en la secci√≥n de ‚ÄúEjercicios propuestos‚Äù afrontaremos varias mejoras que tendr√°s que intentar t√∫ en forma de ejercicios propuestos. ¬øO pensabas que iba a hacer yo todo el trabajo?</p>

<h3 id="351-qu√©-es-la-autenticaci√≥n-mediante-acl">3.5.1. Qu√© es la autenticaci√≥n mediante ACL</h3>

<p>Casi todas las aplicaciones web incluyen un subsistema de autenticaci√≥n de usuarios. El m√°s completo de esos subsistemas es el de las <strong>lisas de control de acceso</strong> (ACL = Access Control List).</p>

<p>Ese subsistema suele estar basado en este dise√±o de base de datos:</p>

<p><img src="/docs/dwes/_site/assets/images/03-acl.jpg" alt="Tablas ACL" /></p>

<p>Esto significa que necesitamos <strong>cinco tablas</strong> para implementar un ACL completo.</p>

<p>Sin embargo, muchas veces tendremos suficiente con solo tres tablas (users, roles y roles-users), o incluso solo con una (users, a√±adiendo quiz√° un campo ‚Äútype‚Äù).</p>

<p><strong>Optar por una soluci√≥n m√°s o menos compleja depender√° del tipos de sistema que estemos implementando.</strong></p>

<p>En cualquier caso, es conveniente que conozcas el esquema ACL completo (es decir, el de 5 tablas) para que lo pongas en pr√°ctica cuando lo necesites. Por eso te lo he presentado. Ahora ya sois oficialmente amigos.</p>

<h3 id="352-una-implementaci√≥n-de-autenticaci√≥n-mediante-acl">3.5.2. Una implementaci√≥n de autenticaci√≥n mediante ACL</h3>

<p>Como ocurre con muchos conceptos en el √°mbito de la programaci√≥n, las ACL se entienden mejor vi√©ndolas que explic√°ndolas. As√≠ que vamos a hacer una implementaci√≥n de ejemplo, que de paso nos servir√° para mostrar en acci√≥n muchas de las cosas que hemos visto en este tema.</p>

<p>Ojo, que esta es solo <em>una de las posibles implementaciones</em>. Pueden existir mil variaciones. Pero, como suced√≠a con los ejemplos que hemos visto anteriormente, te servir√° como base para tu propia implementaci√≥n de una ACL.</p>

<p><strong>IMPORTANTE</strong>: en esta implementaci√≥n ver√°s una distribuci√≥n de archivos un poco peculiar y que, a primera vista, puede resultarte hasta caprichosa. No te agobies. Hemos respetado una arquitectura de aplicaciones denominada <strong><em>modelo-vista-controlador</em></strong> o <strong><em>MVC</em></strong>. Hablaremos largo y tendido sobre esa arquitectura m√°s adelante, y entonces comprender√°s que la distribuci√≥n del c√≥digo no ten√≠a nada de caprichosa.</p>

<p>Por ahora, solo tienes que seguir la pista a lo que sucede, y ni siquiera es necesario que lo entiendas al 100%. Un 80% ya estar√≠a genial. Un 50% ser√≠a suficiente. Tu comprensi√≥n de este c√≥digo aumentar√° cuando tengas que utilizarlo y adaptarlo a tus propios proyectos.</p>

<h4 id="nuestras-tablas-acl">Nuestras tablas ACL</h4>

<p>Vamos a suponer que esta autenticaci√≥n con ACL se est√° implementando para un sistema de publicaci√≥n de noticias (un blog, un peri√≥dico digital o algo semejante). Solo por darle un poco de contexto. Realmente, cambiando los permisos, podr√≠a utilizarse casi para cualquier web.</p>

<p>Haremos una implementaci√≥n completa del ACL, es decir, con las cinco tablas. Esas cinco tablas tendr√°n el siguiente aspecto (te muestro algunos datos de ejemplo para que quede m√°s claro de lo que estamos hablando):</p>

<p><strong>TABLA users</strong></p>

<table>
  <thead>
    <tr>
      <th>id</th>
      <th>email</th>
      <th>passwd</th>
      <th>name</th>
      <th>telef</th>
      <th>etc (otros campos)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>pepe@iescelia.org</td>
      <td>1234</td>
      <td>Pepe P√©rez</td>
      <td>555 230 111</td>
      <td>etc</td>
    </tr>
    <tr>
      <td>2</td>
      <td>ana@iescelia.org</td>
      <td>1234</td>
      <td>Ana L√≥pez</td>
      <td>555 398 234</td>
      <td>etc</td>
    </tr>
    <tr>
      <td>Etc</td>
      <td>Etc</td>
      <td>Etc</td>
      <td>Etc</td>
      <td>Etc</td>
      <td>Etc</td>
    </tr>
  </tbody>
</table>

<p><strong>TABLA roles</strong></p>

<table>
  <thead>
    <tr>
      <th>id</th>
      <th>description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Admin</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Editor</td>
    </tr>
    <tr>
      <td>3</td>
      <td>User</td>
    </tr>
  </tbody>
</table>

<p><strong>TABLA roles-users</strong></p>

<table>
  <thead>
    <tr>
      <th>idUser</th>
      <th>idRol</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>etc</td>
      <td>etc</td>
    </tr>
  </tbody>
</table>

<p><strong>TABLA permissions</strong></p>

<table>
  <thead>
    <tr>
      <th>id</th>
      <th>description</th>
      <th>action</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Crear contenido nuevo</td>
      <td>createContentForm</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Editar contenido propio</td>
      <td>editMyContentForm</td>
    </tr>
    <tr>
      <td>3</td>
      <td>Editar contenido ajeno</td>
      <td>editAnyContentForm</td>
    </tr>
    <tr>
      <td>4</td>
      <td>Borrar contenido propio</td>
      <td>deleteMyContentForm</td>
    </tr>
    <tr>
      <td>5</td>
      <td>Borrar contenido ajeno</td>
      <td>deleteAnyContentForm</td>
    </tr>
    <tr>
      <td>6</td>
      <td>Publicar contenido propio</td>
      <td>publishMyContentForm</td>
    </tr>
    <tr>
      <td>7</td>
      <td>Publicar contenido ajeno</td>
      <td>publishAnyContentForm</td>
    </tr>
    <tr>
      <td>8</td>
      <td>Leer contenido publicado</td>
      <td>readContent</td>
    </tr>
  </tbody>
</table>

<p><strong>TABLA permissions-roles</strong></p>

<table>
  <thead>
    <tr>
      <th>idRol</th>
      <th>idPermission</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>1</td>
      <td>3</td>
    </tr>
    <tr>
      <td>1</td>
      <td>4</td>
    </tr>
    <tr>
      <td>1</td>
      <td>5</td>
    </tr>
    <tr>
      <td>1</td>
      <td>6</td>
    </tr>
    <tr>
      <td>1</td>
      <td>7</td>
    </tr>
    <tr>
      <td>1</td>
      <td>8</td>
    </tr>
    <tr>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>2</td>
      <td>6</td>
    </tr>
    <tr>
      <td>2</td>
      <td>8</td>
    </tr>
    <tr>
      <td>3</td>
      <td>8</td>
    </tr>
  </tbody>
</table>

<p>Observa que, con estas tablas, queda perfectamente definido a qu√© perfil de usuario (o ‚Äúrol‚Äù) pertenece cada usuario y qu√© cosas puede hacer con ese perfil.</p>

<p>Por ejemplo, el usuario Pepe P√©rez, que tiene el Id = 1, es un Administrador, porque tiene asociado el rol 1 en la tabla <em>roles-users</em>. Y los administradores tienen permiso para hacerlo absolutamente todo, seg√∫n se desprende de la tabla <em>permissions-roles</em>.</p>

<p>En cambio, la usuaria Ana L√≥pez (Id = 2) tiene perfil de Editor, y los editores solo tienen permiso para cuatro operaciones: Crear contenido nuevo, Editar su propio contenido, Publicar su propio contenido y Leer el contenido publicado.</p>

<h4 id="c√≥digo-fuente-de-nuestra-implementaci√≥n">C√≥digo fuente de nuestra implementaci√≥n</h4>

<p>En esta implementaci√≥n, no escribiremos el c√≥digo para hacer cosas como ‚ÄúCrear contenido nuevo‚Äù o ‚ÄúPublicar contenido‚Äù. Eso depender√° del sistema concreto que estemos programando, y no es lo que nos interesa ahora.</p>

<p>Lo que nos interesa es ver c√≥mo se autentica un usuario en una aplicaci√≥n web y c√≥mo se le puede dar acceso a unas funcionalidades o a otras dependiendo del contenido de las tablas ACL.</p>

<p>Una vez autenticado, el usuario acceder√° a una vista diferente de la aplicaci√≥n dependiendo de sus privilegios, donde se le mostrar√°n las opciones de que dispone. Es decir, si el usuario que se loguea es Pepe P√©rez, que tiene rol de Administrador, la aplicaci√≥n debe mostrarle estas opciones:</p>

<ul>
  <li>Editar contenido (propio y ajeno)</li>
  <li>Borrar contenido (propio y ajeno)</li>
  <li>Publicar contenido (propio y ajeno)</li>
  <li>Leer contenido</li>
  <li>Crear contenido</li>
</ul>

<p>En cambio, si se loguea Ana L√≥pez, que tiene dos perfiles, la aplicaci√≥n le dar√° a elegir cu√°l quiere usar. Si elige el perfil de Editor, las opciones deben reducirse a:</p>

<ul>
  <li>Editar contenido (propio)</li>
  <li>Publicar contenido (propio)</li>
  <li>Leer contenido</li>
  <li>Crear contenido</li>
</ul>

<p>Cada una de estas opciones redirigir√° la aplicaci√≥n de regreso a <em>index.php</em>, con un valor diferente para la variable <em>action</em> que se pasar√° por la URL. Ese valor se saca de la tabla <em>permissions</em>.</p>

<p><strong>Insisto en una idea muy importante</strong>: no es necesario que comprendas la totalidad de este c√≥digo en este momento. Basta con que te esfuerces en captar la idea general. Volver√°s sobre √©l, y sobre infinitas variedades de √©l, m√°s adelante, cada vez con mayor comprensi√≥n de lo que est√° sucediendo. As√≠ que l√©elo sin prisa y sin agobios, como quien se adentra en la traducci√≥n de un texto escrito en una lengua que se parece un poco a la suya sin llegar a serlo.</p>

<p>Una √∫ltima advertencia: esta soluci√≥n presenta algunos problemas de seguridad (como no filtrar las variables procedentes de un formulario) que resolveremos en los ejercicios propuestos m√°s adelante.</p>

<p><strong>Archivo index.php</strong></p>

<p>Este archivo captura la variable <em>action</em> desde la URL. Esta variable, como ya vimos en el ejemplo de la Biblioteca, indica a la aplicaci√≥n qu√© es lo que debe hacer.</p>

<p>Luego se instancia un objeto de tipo <em>Controller</em> y se invoca un m√©todo con el mismo nombre que la <em>action</em>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="k">include</span><span class="p">(</span><span class="s2">"controller.php"</span><span class="p">);</span>
<span class="nv">$controller</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Controller</span><span class="p">();</span>

<span class="c1">// Miramos a ver si hay alguna acci√≥n pendiente de realizar</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">isset</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'action'</span><span class="p">]))</span> <span class="p">{</span>
    <span class="c1">// No la hay. Usamos la acci√≥n por defecto (mostrar el formulario de login)</span>
    <span class="nv">$action</span> <span class="o">=</span> <span class="s2">"showLoginForm"</span><span class="p">;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="c1">// S√≠ la hay. La recuperamos.</span>
    <span class="nv">$action</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'action'</span><span class="p">];</span>
<span class="p">}</span>

<span class="c1">// Ejecutamos el m√©todo del controlador que se llame como la acci√≥n</span>
<span class="nv">$controller</span><span class="o">-&gt;</span><span class="nv">$action</span><span class="p">();</span>
</code></pre></div></div>

<p><strong>CONTROLADOR (archivo controller.php)</strong></p>

<p>En el controlador est√°n reflejadas todas las posibles acciones que puede realizar la aplicaci√≥n.</p>

<p>Es decir, tiene que haber un m√©todo por cada posible valor de la variable <em>action</em>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">include</span> <span class="p">(</span><span class="s2">"view.php"</span><span class="p">);</span>
<span class="k">include</span> <span class="p">(</span><span class="s2">"user.php"</span><span class="p">);</span>

<span class="kd">class</span> <span class="nc">Controller</span>
<span class="p">{</span>

    <span class="k">private</span> <span class="nv">$view</span><span class="p">,</span> <span class="nv">$user</span><span class="p">;</span>

    <span class="cd">/**
     * Constructor. Crea el objeto vista y los modelos
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">__construct</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nb">session_start</span><span class="p">();</span> <span class="c1">// Si no se ha hecho en el index, claro</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">view</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">View</span><span class="p">();</span> <span class="c1">// Vistas</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="p">();</span> <span class="c1">// Modelo de usuarios</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Muestra el formulario de login
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">showLoginForm</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">view</span><span class="o">-&gt;</span><span class="nf">show</span><span class="p">(</span><span class="s2">"loginForm"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Procesa el formulario de login y, si es correcto, inicia la sesi√≥n con el id del usuario.
     * Redirige a la vista de selecci√≥n de rol.
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">processLoginForm</span><span class="p">()</span>
    <span class="p">{</span>

        <span class="c1">// Validaci√≥n del formulario</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'email'</span><span class="p">]</span> <span class="o">==</span> <span class="s2">""</span> <span class="o">||</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'pass'</span><span class="p">]</span> <span class="o">==</span> <span class="s2">""</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// Alg√∫n campo del formulario viene vac√≠o: volvemos a mostrar el login</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s1">'errorMsg'</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"El email y la contrase√±a son obligatorios"</span><span class="p">;</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">view</span><span class="o">-&gt;</span><span class="nf">show</span><span class="p">(</span><span class="s2">"loginForm"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="c1">// Hemos pasado la validaci√≥n del formulario: vamos a procesarlo</span>
            <span class="nv">$userData</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">user</span><span class="o">-&gt;</span><span class="nf">checkLogin</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'email'</span><span class="p">],</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'pass'</span><span class="p">]);</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$userData</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
                <span class="c1">// Login correcto: creamos la sesi√≥n y pedimos al usuario que elija su rol</span>
                <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'idUser'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$userData</span><span class="o">-&gt;</span><span class="n">id</span><span class="p">;</span>
                <span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">SelectUserRolForm</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span>
                <span class="nv">$data</span><span class="p">[</span><span class="s1">'errorMsg'</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Usuario o contrase√±a incorrectos"</span><span class="p">;</span>
                <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">view</span><span class="o">-&gt;</span><span class="nf">show</span><span class="p">(</span><span class="s2">"loginForm"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Muestra formulario de selecci√≥n de rol de usuario
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">selectUserRolForm</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$data</span><span class="p">[</span><span class="s1">'roles'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">user</span><span class="o">-&gt;</span><span class="nf">getUserRoles</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'idUser'</span><span class="p">]);</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">view</span><span class="o">-&gt;</span><span class="nf">show</span><span class="p">(</span><span class="s2">"selectUserRolForm"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
    <span class="c1">// Posible mejora: si el usuario solo tiene un rol, la aplicaci√≥n podr√≠a seleccionarlo autom√°ticamnte</span>
    <span class="c1">// y saltar a $this-&gt;showMainMenu()</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Procesa el formulario de selecci√≥n de rol de usuario y crea una variable de sesi√≥n para almacenarlo.
     * Redirige al men√∫ principal.
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">processSelectUserRolForm</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'userRol'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'idRol'</span><span class="p">];</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="nf">showMainMenu</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Muestra el men√∫ de opciones del usuario seg√∫n la tabla de persmisos
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">showMainMenu</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$data</span><span class="p">[</span><span class="s1">'permissions'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">user</span><span class="o">-&gt;</span><span class="nf">getUserPermissions</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'userRol'</span><span class="p">]);</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">view</span><span class="o">-&gt;</span><span class="nf">show</span><span class="p">(</span><span class="s2">"mainMenu"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>VISTA (view.php)</strong></p>

<p>Este archivo contiene un m√©todo gen√©rico (dentro de la clase View) para mostrar cualquier otra vista, cuyo nombre se le pasa como par√°metro desde el controlador.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="kd">class</span> <span class="nc">View</span>
<span class="p">{</span>
	<span class="k">public</span> <span class="k">function</span> <span class="n">show</span><span class="p">(</span><span class="nv">$viewName</span><span class="p">,</span> <span class="nv">$data</span> <span class="o">=</span> <span class="kc">null</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">include</span><span class="p">(</span><span class="s2">"views/header.php"</span><span class="p">);</span>
		<span class="k">include</span><span class="p">(</span><span class="s2">"views/</span><span class="nv">$viewName</span><span class="s2">.php"</span><span class="p">);</span>
		<span class="k">include</span><span class="p">(</span><span class="s2">"views/footer.php"</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>VISTA loginForm (archivo views/loginForm.php)</strong></p>

<p>Esta vista muestra el formulario de login. La dejamos preparada para mostrar, opcionalmente, un mensaje de error (del tipo ‚Äúusuario o contrase√±a incorrectos‚Äù) o un mensaje informativo (del tipo ‚ÄúSesi√≥n cerrada con √©xito‚Äù).</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s1">'errorMsg'</span><span class="p">]))</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"&lt;p style='color:red'&gt;"</span> <span class="mf">.</span> <span class="nv">$data</span><span class="p">[</span><span class="s1">'errorMsg'</span><span class="p">]</span> <span class="mf">.</span> <span class="s2">"&lt;/p&gt;"</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s1">'infoMsg'</span><span class="p">]))</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"&lt;p style='color:blue'&gt;"</span> <span class="mf">.</span> <span class="nv">$data</span><span class="p">[</span><span class="s1">'infoMsg'</span><span class="p">]</span> <span class="mf">.</span> <span class="s2">"&lt;/p&gt;"</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="s2">"&lt;form action='index.php'&gt;
        Email:&lt;input type='text' name='email'&gt;&lt;br&gt;
        Contrase√±a:&lt;input type='password' name='pass'&gt;&lt;br&gt;
        &lt;input type='hidden' name='action' value='processLoginForm'&gt;
        &lt;input type='submit'&gt;
      &lt;/form&gt;"</span><span class="p">;</span>
</code></pre></div></div>

<p><strong>VISTA selectUserRolForm (archivo views/selectUserRolForm.php)</strong></p>

<p>Esta vista muestra la lista de roles de un usuario. Sirve por si un usuario tiene asignado m√°s de un rol. As√≠, antes de terminar el login, podr√° elegir con qu√© rol quiere ingresar en la aplicaci√≥n.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="s2">"Selecciona el rol&lt;br&gt;"</span><span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;form action='index.php'&gt;"</span><span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;select name='idRol'&gt;"</span><span class="p">;</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s1">'roles'</span><span class="p">]</span> <span class="k">as</span> <span class="nv">$rol</span><span class="p">)</span> <span class="p">{</span>
     <span class="k">echo</span> <span class="s2">"&lt;option value='"</span><span class="mf">.</span><span class="nv">$rol</span><span class="o">-&gt;</span><span class="n">id</span><span class="mf">.</span><span class="s2">"'&gt;"</span><span class="mf">.</span><span class="nv">$rol</span><span class="o">-&gt;</span><span class="n">description</span><span class="mf">.</span><span class="s2">"&lt;option&gt;"</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">echo</span> <span class="s2">"&lt;/select&gt;"</span><span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;input type='hidden' name='action' value='processSelectUserRolForm'&gt;"</span><span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;button type='submit'&gt;Enviar&lt;/button&gt;"</span><span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;/form&gt;"</span><span class="p">;</span>
</code></pre></div></div>

<p><strong>VISTA mainMenu (archivo views/mainMenu.php)</strong></p>

<p>Esta vista muestra las opciones del programa asociadas a un usuario concreto. Cada opci√≥n es un enlace a la propia aplicacion con un valor diferente para la variable <em>action</em>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="k">echo</span> <span class="s2">"Men√∫ principal&lt;br&gt;"</span><span class="p">;</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s1">'permissions'</span><span class="p">]</span> <span class="k">as</span> <span class="nv">$permission</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"&lt;a href='index.php?action="</span> <span class="mf">.</span> <span class="nv">$permission</span><span class="o">-&gt;</span><span class="n">action</span> <span class="mf">.</span> <span class="s2">"'&gt;"</span> <span class="mf">.</span> <span class="nv">$permission</span><span class="o">-&gt;</span><span class="n">description</span> <span class="mf">.</span> <span class="s2">"&lt;/a&gt;&lt;br&gt;"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>MODELO (archivo user.php)</strong></p>

<p>El modelo contiene todos los m√©todos necesarios para acceder a la base de datos (o, en general, a cualquier recurso del servidor). Esos m√©todos siempre se invocan desde el controlador.</p>

<p>En este caso, llamamos <em>user.php</em> al modelo porque acceder√° √∫nicamente a la tabla de usuarios.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="kd">class</span> <span class="nc">User</span>
<span class="p">{</span>

    <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span>

    <span class="cd">/**
     * Constructor de la clase.
     * Crea una conexi√≥n con la base de datos y la asigna a la variable $this-&gt;db
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">__construct</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">mysqli</span><span class="p">(</span><span class="s2">"servidor"</span><span class="p">,</span> <span class="s2">"usuario"</span><span class="p">,</span> <span class="s2">"contrase√±a"</span><span class="p">,</span> <span class="s2">"base-de-datos"</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Comprueba si un email y una password pertenecen a alg√∫n usuario de la base  de datos.
     * @param String $email El email del usuario que se quiere comprobar
     * @param String $pass La contrase√±a del usuario que se quiere comprobar
     * @return User $usuario Si el usuario existe, devuelve un objeto con todos los campos del usuario en su interior. Si no, devuelve un objeto null
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">checkLogin</span><span class="p">(</span><span class="nv">$email</span><span class="p">,</span> <span class="nv">$pass</span><span class="p">)</span>
    <span class="p">{</span>
       <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="s2">"SELECT id FROM users WHERE email = '</span><span class="nv">$email</span><span class="s2">' AND password = '</span><span class="nv">$pass</span><span class="s2">'"</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="n">num_rows</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="nv">$usuario</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="nf">fetch_object</span><span class="p">();</span>
                <span class="k">return</span> <span class="nv">$usuario</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span>
                <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="cd">/**
     * Busca en la base de datos la lista de roles de un usuario
     * @param integer $idUser El id del usuario
     * @return array $resultArray Un array con todos los roles del usuario, o null si el usuario no existe o no tiene roles asignados
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">getUserRoles</span><span class="p">(</span><span class="nv">$idUser</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$resultArray</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="s2">"SELECT roles.* FROM roles
                                            INNER JOIN `roles-users` ON roles.id = `roles-users`.idRol
                                            WHERE `roles-users`.idUser = '</span><span class="nv">$idUser</span><span class="s2">'"</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="n">num_rows</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">while</span> <span class="p">(</span><span class="nv">$rol</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="nf">fetch_object</span><span class="p">())</span> <span class="p">{</span>
                    <span class="nv">$resultArray</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$rol</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">return</span> <span class="nv">$resultArray</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span>
                <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
        <span class="p">}</span>

    <span class="p">}</span>

    <span class="cd">/**
     * Busca en la base de datos los permisos asociados a un rol
     * @param integer $idRol El id del rol
     * @return array $resultArray Un array con la lista de permisos asociados al rol, o null si el rol no existe o no tiene permisos asociados
     */</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">getUserPermissions</span><span class="p">(</span><span class="nv">$idRol</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$resultArray</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="s2">"SELECT permissions.* FROM permissions 
                                            INNER JOIN `permissions-roles` ON permissions.id = `permissions-roles`.idPermission 
                                            WHERE `permissions-roles`.idRol = '</span><span class="nv">$idRol</span><span class="s2">'"</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="n">num_rows</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">while</span> <span class="p">(</span><span class="nv">$permission</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="nf">fetch_object</span><span class="p">())</span> <span class="p">{</span>
                    <span class="nv">$resultArray</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$permission</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">return</span> <span class="nv">$resultArray</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span>
                <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span>
            <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
        <span class="p">}</span>

    <span class="p">}</span>
<span class="p">}</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>
:ET