I"8<h2 class="no_toc" id="21-programación-cliente-servidor">2.1. Programación cliente-servidor</h2>

<ul id="markdown-toc">
  <li><a href="#211-un-poco-de-jerga-informática" id="markdown-toc-211-un-poco-de-jerga-informática">2.1.1. Un poco de jerga informática</a></li>
  <li><a href="#212-una-petición-web-en-la-época-10" id="markdown-toc-212-una-petición-web-en-la-época-10">2.1.2. Una petición web en la época 1.0</a></li>
  <li><a href="#213-una-petición-web-en-la-época-20" id="markdown-toc-213-una-petición-web-en-la-época-20">2.1.3. Una petición web en la época 2.0</a></li>
</ul>

<p>En los primeros tiempos de Internet, no se ejecutaban programas en el servidor. Solo se pedían páginas estáticas (escritas en HTML) más o menos elaboradas que había sido guardadas en el servidor por un administrador de sistemas. A esto se le denominó <strong>web 1.0</strong>.</p>

<p>A alguien se le ocurrió la idea de que <strong>los propios visitantes podrían también crear contenido</strong>. Ese contenido se guardaría en el servidor (en archivos o en una base de datos) y posteriormente podría recuperarse para generar con él páginas dinámicas, generadas sobre la marcha. Es decir, documentos HTML que no existieran previamente y que nadie, en realidad, hubiera tecleado, sino que se creasen a partir del contenido almacenado en esos archivos o esa base de datos.</p>

<p>Esa web dinámica estaría generada por un programa ejecutado en el servidor, un programa cuya salida sería HTML válido, comprensible por el navegador que la reciba. A esto se le denominó <strong>web 2.0</strong> y supuso una revolución tan grande como el propio nacimiento de Internet.</p>

<h3 id="211-un-poco-de-jerga-informática">2.1.1. Un poco de jerga informática</h3>

<p>Antes de continuar, tienes que asegurarte de que comprendes bien el significado de algunos términos básicos:</p>

<ul>
  <li>
    <p>Un <strong>servidor</strong> es <strong>un programa</strong> que se ejecuta en una máquina conectada a una red y que permanece dormido hasta que una petición procedente de la red lo despierta. Entonces, el programa hace algo (consulta datos, elabora un cálculo, lo que sea) y devuelve su resultado por la red.</p>

    <p>Por extensión, un servidor también es <strong>cualquier ordenador donde se ejecute un programa servidor</strong>. Es decir, usamos la misma palabra para referirnos a un programa y al ordenador donde se ejecuta ese programa. Mala idea, ya lo sé, pero es lo que hay.</p>
  </li>
  <li>
    <p>El <strong>cliente</strong> es <strong>un programa</strong> que envía peticiones al servidor para despertarlo. También es el programa que recoge el resultado devuelto por el servidor.</p>

    <p>¿Y sabes qué? Que, por extensión, <strong>la máquina</strong> donde se ejecuta un programa cliente también se llama cliente.</p>
  </li>
</ul>

<p>Pues bien, en programación web, nuestro cliente es el <strong>navegador web</strong> (también llamado cliente web). Cualquier navegador del universo conocido entra en esta categoría. Excepto, tal vez, Internet Explorer (sí, esto es un chiste informático).</p>

<p>Y un servidor es cualquier máquina de la red donde se esté ejecutando un programa servidor web como Apache, Nginx, Tomcat, IIS y otros cuando viejos amigos que irás conociendo a lo largo de este curso.</p>

<h3 id="212-una-petición-web-en-la-época-10">2.1.2. Una petición web en la época 1.0</h3>

<p>Ahora que tienes claro qué es un servidor y un cliente web, puedes comprender el siguiente esquema.</p>

<p>En él, se ilustra lo que ocurre cuando un cliente web (recuerda: tu navegador) envía al servidor la petición de una <strong>página estática</strong>.</p>

<p>El servidor, en este caso, se limita a enviar al cliente el documento HTML tal cual está almacenado en su disco duro, sin cambiar una sola coma.</p>

<p><img src="/docs/dwes/_site/assets/images/02-servicio-www-1.jpg" alt="Ejemplo de servicio www" /></p>

<h3 id="213-una-petición-web-en-la-época-20">2.1.3. Una petición web en la época 2.0</h3>

<p>Con la web 2.0 la cosa cambia bastante porque aparecen las <strong>páginas dinámicas</strong>, aunque tendrás que fijarte bien en el esquema para apreciar la diferencia.</p>

<p>Quédate con lo importante: en este esquema, el cliente web no pide un documento HTML, sino <em>un programa</em>, que puede estar escrito en PHP o algún otro lenguaje. Eso es lo de menos.</p>

<p>Ese programa se ejecuta en el servidor, y <em>el resultado de esa ejecución</em> es lo que recibe el cliente, <em>no el programa en sí</em>.</p>

<p><img src="/docs/dwes/_site/assets/images/02-servicio-www-2.jpg" alt="Ejemplo de servicio www" /></p>

<p>Pues bien: si un sitio web funciona del primer modo, no es una aplicación web, sino una página web estática. Para que sea considerado una aplicación web, debe funcionar del segundo modo.</p>

:ET