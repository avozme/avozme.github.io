I"7Ω<h2 class="no_toc" id="17-arquitectura-mvc">1.7. Arquitectura MVC</h2>

<ul id="markdown-toc">
  <li><a href="#171-arquitectura-de-aplicaciones" id="markdown-toc-171-arquitectura-de-aplicaciones">1.7.1. Arquitectura de aplicaciones</a></li>
  <li><a href="#172-qu√©-es-la-arquitectura-mvc" id="markdown-toc-172-qu√©-es-la-arquitectura-mvc">1.7.2. ¬øQu√© es la arquitectura MVC?</a></li>
  <li><a href="#173-mvc-en-la-pr√°ctica-una-implementaci√≥n-incremental" id="markdown-toc-173-mvc-en-la-pr√°ctica-una-implementaci√≥n-incremental">1.7.3. MVC en la pr√°ctica: una implementaci√≥n incremental</a></li>
  <li><a href="#174-el-patr√≥n-mvc-en-la-teor√≠a" id="markdown-toc-174-el-patr√≥n-mvc-en-la-teor√≠a">1.7.4. El patr√≥n MVC en la teor√≠a</a></li>
  <li><a href="#175-una-implementaci√≥n-completa-biblioteca" id="markdown-toc-175-una-implementaci√≥n-completa-biblioteca">1.7.5. Una implementaci√≥n completa: Biblioteca</a>    <ul>
      <li><a href="#controlador-indexphp" id="markdown-toc-controlador-indexphp">Controlador (index.php)</a></li>
      <li><a href="#modelo-de-libros-modelslibrophp" id="markdown-toc-modelo-de-libros-modelslibrophp">Modelo de libros (models/libro.php)</a></li>
      <li><a href="#plantilla-de-las-vistas-viewphp" id="markdown-toc-plantilla-de-las-vistas-viewphp">Plantilla de las vistas (view.php)</a></li>
      <li><a href="#vista-lista-de-libros-viewslibroallphp" id="markdown-toc-vista-lista-de-libros-viewslibroallphp">Vista ‚Äúlista de libros‚Äù (views/libro/all.php)</a></li>
      <li><a href="#vista-para-inserci√≥nmodificaci√≥n-de-libros-viewslibroformphp" id="markdown-toc-vista-para-inserci√≥nmodificaci√≥n-de-libros-viewslibroformphp">Vista para inserci√≥n/modificaci√≥n de libros (views/libro/form.php)</a></li>
      <li><a href="#componentes-de-la-plantilla-cabecera-men√∫-de-navegaci√≥n-y-pie" id="markdown-toc-componentes-de-la-plantilla-cabecera-men√∫-de-navegaci√≥n-y-pie">Componentes de la plantilla: cabecera, men√∫ de navegaci√≥n y pie</a></li>
    </ul>
  </li>
</ul>

<p>La arquitectura MVC es un <strong>patr√≥n de software</strong>, es decir, una soluci√≥n probada montones de veces que se adapta bien a muchos problemas diferentes.</p>

<p>En este apartado vamos a aprender a aplicar este patr√≥n arquitect√≥nico a nuestras aplicaciones web hechas con PHP.</p>

<h3 id="171-arquitectura-de-aplicaciones">1.7.1. Arquitectura de aplicaciones</h3>

<p>Cuando hablamos de <strong>arquitectura de una aplicaci√≥n</strong> nos referimos a la estructura b√°sica que la sustenta, como los pilares de un edificio en construcci√≥n. Si quitas las paredes, las ventanas, las puertas, los azulejos de la cocina‚Ä¶ todav√≠a pueden distinguirse las formas fundamentales, ¬øverdad?</p>

<p>Pues bien, el <em>patr√≥n de arquitectura</em> m√°s popular en aplicaciones web se llama <strong>MVC o Modelo-Vista-Controlador</strong>.</p>

<h3 id="172-qu√©-es-la-arquitectura-mvc">1.7.2. ¬øQu√© es la arquitectura MVC?</h3>

<p>El MVC es tan solo <strong>una arquitectura multicapa estandarizada</strong>. Una arquitectura de <strong>3 capas</strong>, para ser exactos.</p>

<p>Este es el esquema de una arquitectura en 3 capas. Cada capa ejecuta una parte de la soluci√≥n, y entre ellas colaboran para formar la aplicaci√≥n completa. La capa superior interact√∫a con el usuario; la capa inferior, con la m√°quina (donde dice ‚Äúhardware‚Äù, deber√≠a decir ‚Äúcualquier cosa menos abstracta que nuestro programa‚Äù). Tienes permiso para imaginar cada capa como una clase con sus m√©todos y atributos.</p>

<p><img src="../../assets/images/04-arquitectura-3-capas.png" alt="Arquitectura en 3 capas" /></p>

<p>Pues bien, si a esas tres capas les ponemos nombres ex√≥ticos como <em>modelo</em>, <em>vista</em> y <em>controlador</em>, y tuneamos un poco el esquema, ya lo tenemos: <strong>la arquitectura MVC</strong>.</p>

<p><img src="../../assets/images/04-arquitectura-mvc.png" alt="Arquitectura MVC" /></p>

<p>¬øY ya est√°? Bueno, no. Ahora tienes que aprender qu√© significa <em>en realidad</em> esta palabrer√≠a.</p>

<p>Porque todo esto est√° muy bien como construcci√≥n te√≥rica, pero ¬øc√≥mo te afecta a ti a la hora de programar? ¬øQu√© clases tienes que crear? ¬øQu√© parte del c√≥digo hay que poner en cada clase?</p>

<p>En la pr√°ctica, es m√°s simple de lo que parece. Lo vas a ver enseguida. Y lo maravilloso es que much√≠simas aplicaciones web encajan como un guante en esta arquitectura. Es decir, apenas tendremos que hacer trabajo de dise√±o previo, porque, si es una aplicaci√≥n web, ya sabemos qu√© clases tendremos que construir: los que nos indique la arquitectura MVC.</p>

<p>Antes de pasar a la parte pr√°ctica de todo esto, perm√≠teme un breve apunte: por supuesto, nada impide construir arquitecturas con m√°s de 3 capas. De hecho, nosotros vamos a usar una variante del MVC en el que se a√±ade una capa adicional por debajo del modelo, es decir, una arquitectura con 4 capas. Pero ya llegaremos a eso.</p>

<h3 id="173-mvc-en-la-pr√°ctica-una-implementaci√≥n-incremental">1.7.3. MVC en la pr√°ctica: una implementaci√≥n incremental</h3>

<div style="color:red"><i>ATENCI√ìN: esta secci√≥n es solo para quien est√© interesado en comprender m√°s profundamente el patr√≥n MVC. L√©ela atentamente si es tu caso. Si no, puedes saltar sin problemas al <a href="../mvc/#174-el-patr%C3%B3n-mvc-en-la-teor%C3%ADa">Apartado 1.7.4</a></i>.</div>

<p>Tras esta introducci√≥n al MVC, vamos a estudiar a fondo este patr√≥n. Y lo vamos a hacer por medio de un ejemplo, que es como mejor suelen comprenderse estas cosas. Una vez terminado y comprendido el ejemplo, daremos una definici√≥n m√°s te√≥rica.</p>

<p>Es decir, que lo vamos hacer al rev√©s de lo habitual: primero la pr√°ctica y luego la teor√≠a. Seg√∫n mi experiencia, la gente suele comprenderlo mejor en ese orden.</p>

<p>Pero, para que esto funcione, tienes que <strong>leer el c√≥digo fuente con atenci√≥n</strong>. Es un c√≥digo sencillo y bien comentado, y que se va complicando muy poco a poco, en pasos incrementales, desde un c√≥digo cl√°sico monol√≠tico hasta una implementaci√≥n completa de un MVC.</p>

<p>Si lo lees con la atenci√≥n que te pido, ver√°s como, <strong>al acabar, entender√°s perfectamente en qu√© consiste el MVC</strong> y podr√°s empezar a aplicarlo en tus proyectos.</p>

<p>El ejemplo con el que vamos a trabajar es este: supongamos que queremos programar una peque√±a aplicaci√≥n web que nos permita hacer publicaciones en una especie de blog simplificado. Esas publicaciones se guardan como registros en una tabla de una base de datos.</p>

<p>En el c√≥digo de ejemplo sobre el que vamos a trabajar, nos vamos a centrar en una funcionalidad concreta de este mini-blog: el listado de los art√≠culos existentes en la base de datos.</p>

<h4 id="c√≥digo-monol√≠tico">C√≥digo monol√≠tico</h4>

<p>Una primera aproximaci√≥n a la soluci√≥n, <strong>sin usar ning√∫n patr√≥n de arquitectura</strong> en absoluto, podr√≠a ser esta (√©chale un vistazo y aseg√∫rate de entenderlo):</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?</span>
  <span class="c1">// Conectamos con la base de datos</span>
  <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">mysqli</span><span class="p">(</span><span class="s1">'mi-host'</span><span class="p">,</span> <span class="s1">'mi-usuario'</span><span class="p">,</span> <span class="s1">'mi-clave'</span><span class="p">,</span> <span class="s1">'mi-base-de-datos'</span><span class="p">);</span>
  <span class="c1">// Lanzamos una consulta para recuperar los art√≠culos que haya en la base de datos</span>
  <span class="nv">$res</span> <span class="o">=</span> <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="s1">'SELECT fecha, titulo FROM articulo'</span><span class="p">);</span>
<span class="cp">?&gt;</span>
// Generamos una tabla HTML con el resultado de la consulta
<span class="nt">&lt;h1&gt;</span>Listado de Art√≠culos<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;table&gt;</span>
     <span class="nt">&lt;tr&gt;</span> <span class="nt">&lt;th&gt;</span>Fecha<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;th&gt;</span>Titulo<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;/tr&gt;</span>
<span class="cp">&lt;?php</span>
  <span class="c1">// Recorremos fila a fila el resultado de la consulta</span>
  <span class="k">while</span> <span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="nf">fetch_array</span><span class="p">())</span>  <span class="p">{</span>
      <span class="k">echo</span> <span class="s2">"&lt;tr&gt;"</span><span class="p">;</span>
      <span class="k">echo</span> <span class="s2">"&lt;td&gt; "</span><span class="mf">.</span><span class="nv">$row</span><span class="p">[</span><span class="s1">'fecha'</span><span class="p">]</span><span class="mf">.</span><span class="s2">" &lt;/td&gt;"</span><span class="p">;</span>
      <span class="k">echo</span> <span class="s2">"&lt;td&gt; "</span><span class="mf">.</span><span class="nv">$row</span><span class="p">[</span><span class="s1">'titulo'</span><span class="p">]</span><span class="mf">.</span><span class="s2">" &lt;/td&gt;"</span><span class="p">;</span>
      <span class="k">echo</span> <span class="s2">"&lt;/tr&gt;"</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">echo</span> <span class="s2">"&lt;/table&gt;"</span><span class="p">;</span>
  <span class="c1">// Cerramos la conexi√≥n con la BD</span>
  <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">close</span><span class="p">();</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>Esta soluci√≥n se denomina <strong>monol√≠tica</strong>, porque incluye todo el c√≥digo necesario en el mismo bloque.</p>

<p>Por supuesto, para un ejemplo tan simple como este, el c√≥digo monol√≠tico es m√°s que suficiente, pero en un sistema m√°s complejo pronto empieza a convertirse en un monstruo inmanejable.</p>

<h4 id="primera-mejora-controlador--vista">Primera mejora: controlador + vista</h4>

<p>Vamos a aproximarnos un poco a la soluci√≥n MVC <strong>separando ese c√≥digo monol√≠tico en dos bloques</strong> (que guardaremos en archivos distintos):</p>

<ul>
  <li><strong>Un controlador</strong> (archivo <em>index.php</em>).</li>
  <li><strong>Una vista</strong> (archivo <em>showAllArticles.php</em>).</li>
</ul>

<p>Primero, el <strong>controlador</strong>. Se encargar√° de recuperar los datos, pero <em>no de mostrarlos</em>. Generar el interfaz de usuario, es decir, el HTML, ser√° la labor que le dejaremos a la vista. El controlador preparar√° esos datos y los empaquetar√° en un array para que est√©n disponibles en la vista. Y la vista la insertaremos en el controlador con un <em>include()</em>.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?</span>
  <span class="c1">// Este es el controlador.</span>
  <span class="c1">// Como esta aplicaci√≥n de ejemplo solo realiza una acci√≥n,</span>
  <span class="c1">// no usamos de momento la variable "action"</span>

  <span class="c1">// Conectamos a la BD y sacamos la lista de art√≠culos</span>
  <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">mysqli</span><span class="p">(</span><span class="s1">'mi-host'</span><span class="p">,</span> <span class="s1">'mi-usuario'</span><span class="p">,</span> <span class="s1">'mi-clave'</span><span class="p">,</span> <span class="s1">'mi-base-de-datos'</span><span class="p">);</span>
  <span class="nv">$res</span> <span class="o">=</span> <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="s1">'SELECT fecha, titulo FROM articulo'</span><span class="p">);</span>

  <span class="c1">// Convertimos la lista de art√≠culos, que es un cursor de MySQL, en un array est√°ndar de PHP</span>
  <span class="nv">$articles</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
  <span class="k">while</span> <span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="nf">fetch_array</span><span class="p">())</span>  <span class="p">{</span>
      <span class="nv">$articles</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$row</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">close</span><span class="p">();</span>

  <span class="c1">// Incluimos el c√≥digo de la vista, donde se usar√° el array de art√≠culos</span>
  <span class="c1">// para generar la tabla HTML.</span>
  <span class="k">include</span><span class="p">(</span><span class="s1">'showAllArticles.php'</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>La <strong>vista</strong> que mostrar√° los datos del array contiene un c√≥digo muy semejante al de la soluci√≥n monol√≠tica, solo que ahora estar√° ubicada en un archivo aparte (<em>showAllArticles.php</em>) y har√° un bucle sobre el array de resultados que le ha preparado el controlador:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>Listado de Articulos<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;table&gt;</span>
     <span class="nt">&lt;tr&gt;</span> <span class="nt">&lt;th&gt;</span>Fecha<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;th&gt;</span>Titulo<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;/tr&gt;</span>
     <span class="cp">&lt;?php</span> 
     <span class="k">foreach</span><span class="p">(</span><span class="nv">$articles</span> <span class="k">as</span> <span class="nv">$article</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">echo</span> <span class="s2">"&lt;tr&gt;
           &lt;td&gt;"</span><span class="mf">.</span><span class="nv">$article</span><span class="p">[</span><span class="s1">'fecha'</span><span class="p">]</span><span class="mf">.</span><span class="s2">"&lt;/td&gt;
           &lt;td&gt;"</span><span class="mf">.</span><span class="nv">$article</span><span class="p">[</span><span class="s1">'titulo'</span><span class="p">]</span><span class="mf">.</span><span class="s2">"&lt;/td&gt;
        &lt;/tr&gt;"</span><span class="p">;</span>
     <span class="p">}</span>
     <span class="cp">?&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div>

<h4 id="segunda-mejora-modelo-vista-y-controlador">Segunda mejora: modelo, vista y controlador</h4>

<p>En esta segunda mejora, <strong>dividiremos el c√≥digo en tres bloques</strong> (ubicados, de nuevo, en archivos diferentes):</p>

<ul>
  <li><strong>Un modelo</strong> para los art√≠clos (archivo <em>articles.php</em>). Contendr√° una clase con un m√©todo que se encargar√° de acceder a la base de datos y empaquetar el resultado de la consulta en un array.</li>
  <li><strong>Una vista</strong> (archivo <em>showAllArticles.php</em>). Se encargar√° de generar el HTML con el resultado de la consulta.</li>
  <li><strong>Un controlador</strong> (archivo <em>index.php</em>). Se encargar√° de invocar al modelo y a la vista en el orden correcto.</li>
</ul>

<p>Por lo tanto, el <strong>controlador</strong> (<em>index.php</em>), al extraer de √©l todo lo que tenga que ver con la base de datos, se queda en algo tan sencillo como esto:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">include</span><span class="p">(</span><span class="s1">'articles.php'</span><span class="p">);</span>       <span class="c1">// En este archivo estar√° el modelo</span>
<span class="nv">$articulos</span> <span class="o">=</span> <span class="nc">Model</span><span class="o">::</span><span class="nf">getAll</span><span class="p">();</span>  <span class="c1">// Este m√©todo del modelo nos devuelve la lista de art√≠culos</span>
<span class="k">include</span><span class="p">(</span><span class="s1">'showAllArticles.php'</span><span class="p">);</span>   <span class="c1">// En este archivo estar√° la vista</span>
</code></pre></div></div>

<p>El <strong>modelo</strong> (<em>articles.php</em>) consta de una clase con solo un m√©todo (de momento) encargado de consultar todos los art√≠culos y devolverlos empaquetados en un array:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="kd">class</span> <span class="nc">Articles</span> <span class="p">{</span>
  <span class="k">public</span> <span class="k">function</span> <span class="n">getAll</span><span class="p">()</span>
  <span class="p">{</span>
    <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">mysqli</span><span class="p">(</span><span class="s1">'mi-host'</span><span class="p">,</span> <span class="s1">'mi-usuario'</span><span class="p">,</span> <span class="s1">'mi-clave'</span><span class="p">,</span> <span class="s1">'mi-base-de-datos'</span><span class="p">);</span>
    <span class="nv">$res</span><span class="o">=</span><span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="s1">'SELECT fecha, titulo FROM articulo'</span><span class="p">);</span>

    <span class="nv">$articles</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
    <span class="k">while</span> <span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="nf">fetch_array</span><span class="p">())</span>  <span class="p">{</span>
        <span class="nv">$articles</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$row</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">close</span><span class="p">();</span>
    <span class="k">return</span> <span class="nv">$articles</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>Por √∫ltimo, la <strong>vista</strong> (<em>showAllArticles.php</em>) ser√° exactamente igual que en la versi√≥n anterior: un recorrido por el array de art√≠culos para mostrarlos en formato HTML:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>Listado de Articulos<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;table&gt;</span>
     <span class="nt">&lt;tr&gt;</span> <span class="nt">&lt;th&gt;</span>Fecha<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;th&gt;</span>Titulo<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;/tr&gt;</span>
     <span class="cp">&lt;?php</span> 
     <span class="k">foreach</span><span class="p">(</span><span class="nv">$articles</span> <span class="k">as</span> <span class="nv">$article</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">echo</span> <span class="s2">"&lt;tr&gt;
           &lt;td&gt;"</span><span class="mf">.</span><span class="nv">$article</span><span class="p">[</span><span class="s1">'fecha'</span><span class="p">]</span><span class="mf">.</span><span class="s2">"&lt;/td&gt;
           &lt;td&gt;"</span><span class="mf">.</span><span class="nv">$article</span><span class="p">[</span><span class="s1">'titulo'</span><span class="p">]</span><span class="mf">.</span><span class="s2">"&lt;/td&gt;
        &lt;/tr&gt;"</span><span class="p">;</span>
     <span class="p">}</span>
     <span class="cp">?&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div>

<h4 id="tercera-mejora-a√±adiendo-capa-de-abstracci√≥n-de-datos">Tercera mejora: a√±adiendo capa de abstracci√≥n de datos</h4>

<p>Como no sabemos lo que es el miedo, vamos a complicar nuestro patr√≥n modelo-vista-controlador con una <strong>cuarta capa</strong>: la <strong>capa de abstracci√≥n de datos</strong>.</p>

<p>La idea de esta capa adicional es proporcionar un mecanismo de abstracci√≥n respecto del gestor de base de datos concreto que estemos utilizando.</p>

<p>Vaya frasecita, ¬øeh? <em>‚ÄúUn mecanismo de abstracci√≥n respecto del gestor de base de datos‚Äù</em>. Si no has bizqueado un poco al leerlo, es que tienes los nervios de acero. ¬øQu√© narices significa eso?</p>

<p>Es solo una de esas expresiones de que los inform√°ticos usamos para fardar, como cuando un m√©dico te dice que est√°s acatarrado, pero te lo dice en lat√≠n para que parezca m√°s complicado de lo que es.</p>

<p>Te explico qu√© es eso del <em>‚Äúmecanismo de abstracci√≥n bla, bla, bla‚Äù</em>.</p>

<p>Si te fijas en el <strong>modelo</strong> de la soluci√≥n anterior, ver√°s que estamos usando una clase (<em>mysqli</em>) y unos m√©todos que solo funcionan con MySQL o MariaDB. Si quis√©ramos cambiar el gestor de base de datos (algo relativamente frecuente), tendr√≠amos que revisar <em>todos</em> nuestros modelos, y tal vez modificar y volver a probar miles de l√≠neas de c√≥digo.</p>

<p>Una forma de independizar nuestra aplicaci√≥n del gestor de base de datos que haya debajo es programar lo que se llama <strong>capa de abstracci√≥n</strong> que contenga dos o tres m√©todos gen√©ricos (como <em>consultar()</em> para lanzar SELECT o <em>manipular()</em> para lanzar INSERT, UPDATE o DELETE).</p>

<p>De ese modo, cuando queramos hacer una consulta desde el modelo, no lo haremos con los m√©todos de MySQL (como <em>query()</em>, <em>fetch_array()</em> y similares), sino con los nuestros (<em>consultar()</em>, <em>manipular()</em>, o como los hayamos querido llamar). Si alg√∫n d√≠a necesitamos cambiar el gestor de base de datos, solo tendremos que reescribir el c√≥digo de esa capa de abstracci√≥n, es decir, un par de decenas de l√≠neas de c√≥digo frente a varios miles que ten√≠amos que revisar y probar antes.</p>

<p>Por lo tanto, en esta tercera mejora vamos a dividir el c√≥digo en cuatro bloques:</p>

<ul>
  <li><strong>Un controlador</strong> (archivo <em>index.php</em>).</li>
  <li><strong>Una vista</strong> (archivo <em>view.php</em>).</li>
  <li><strong>Un modelo en dos capas</strong>:
    <ul>
      <li><strong>Capa de abstracci√≥n de datos</strong> (<em>db.php</em>)</li>
      <li><strong>Capa de acceso a datos</strong> (el modelo de art√≠culos propiamente dicho) (<em>articles.php</em>).</li>
    </ul>
  </li>
</ul>

<p>El c√≥digo de la <strong>capa de abstracci√≥n</strong> ser√≠a algo as√≠:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Db</span> <span class="p">{</span>

  <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span> <span class="c1">// Aqu√≠ guardaremos la conexi√≥n con la base de datos</span>

  <span class="cd">/**
   * Abre la conexi√≥n con la base de datos
   * @param $server URL del servidor de la base de datos
   * @param $username Nombre de usuario en ese servidor
   * @param $pass Contrase√±a
   * @param $dbname Nombre de la base de datos
   * @return 0 si la conexi√≥n se realiza con normalidad y -1 en caso de error
   */</span>
  <span class="k">function</span> <span class="n">createConnection</span><span class="p">(</span><span class="nv">$server</span><span class="p">,</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$pass</span><span class="p">,</span> <span class="nv">$dbname</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">mysqli</span><span class="p">(</span><span class="nv">$servidor</span><span class="p">,</span> <span class="nv">$usuario</span><span class="p">,</span> <span class="nv">$clave</span><span class="p">,</span> <span class="nv">$dbname</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$db</span><span class="o">-&gt;</span><span class="n">connect_errno</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="cd">/**
   * Cierra la conexi√≥n con la base de datos
   */</span>
  <span class="k">function</span> <span class="n">closeConnection</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="p">)</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">close</span><span class="p">();</span>
  <span class="p">}</span>

  <span class="cd">/**
   * Lanza una consulta (SELECT) contra la base de datos.
   * ¬°Ojo! Este m√©todo solo funcionar√° con sentencias SELECT.
   * @param $sql El c√≥digo de la consulta que se quiere lanzar
   * @return Un array bidimensional con los resultados de la consulta (estar√° vac√≠o si la consulta no devolvi√≥ nada)
   */</span>
  <span class="k">function</span> <span class="n">dataQuery</span><span class="p">(</span><span class="nv">$sql</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$res</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
    <span class="nv">$resArray</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$res</span><span class="p">)</span> <span class="p">{</span>
      <span class="nv">$resArray</span> <span class="o">=</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="nf">fetch_all</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">$resArray</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="cd">/**
   * Lanza una sentencia de manipulaci√≥n de datos contra la base de datos.
   * ¬°Ojo! Este m√©todo solo funcionar√° con sentencias INSERT, UPDATE, DELETE y similares.
   * @param $sql El c√≥digo de la consulta que se quiere lanzar
   * @return El n√∫mero de filas insertadas, modificadas o borradas por la sentencia SQL (0 si no produjo ning√∫n efecto).
   */</span>
  <span class="k">function</span> <span class="n">dataManipulation</span><span class="p">(</span><span class="nv">$sql</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="n">affected_rows</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>El c√≥digo del <strong>modelo</strong> va a hacer uso de la capa de abstracci√≥n en lugar de usar los m√©todos de la clase <em>mysqli</em> directamente:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">include</span> <span class="s2">"Db.php"</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">Articles</span> <span class="p">{</span>

  <span class="k">public</span> <span class="k">function</span> <span class="n">getAll</span><span class="p">()</span> <span class="p">{</span>
    <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Db</span><span class="p">();</span>  <span class="c1">// Creamos un objeto para usar nuestra capa de abstracci√≥n</span>

    <span class="c1">// Conectamos con la BD a trav√©s de nuestra capa de abstracci√≥n</span>
    <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">createConnection</span><span class="p">(</span><span class="s1">'mi-host'</span><span class="p">,</span> <span class="s1">'mi-usuario'</span><span class="p">,</span> <span class="s1">'mi-clave'</span><span class="p">,</span> <span class="s1">'mi-base-de-datos'</span><span class="p">);</span>

    <span class="c1">// Lanzamos la consulta a trav√©s de nuestra capa de abstracci√≥n.</span>
    <span class="c1">// Nos devolver√° directamente un array est√°ndar de PHP.</span>
    <span class="nv">$articles</span> <span class="o">=</span> <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">dataQuery</span><span class="p">(</span><span class="s1">'SELECT fecha, titulo FROM articulo'</span><span class="p">);</span>

    <span class="c1">// Cerramos la conexi√≥n con la BD</span>
    <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">closeConnection</span><span class="p">();</span>

    <span class="k">return</span> <span class="nv">$articles</span><span class="p">;</span>
  <span class="p">}</span>

<span class="p">}</span>
</code></pre></div></div>

<p>El <strong>controlador</strong> y la <strong>vista</strong> son exactamente los mismos que en la soluci√≥n anterior, as√≠ que no vamos a escribir el c√≥digo de nuevo. Esto es l√≥gico: solo hemos modificado la forma en la que trabaja el modelo, pero gracias al encapsulamiento de los objetos, el resto de la aplicaci√≥n no se ha enterado de ello.</p>

<h4 id="cuarta-mejora-transformaci√≥n-en-clases-y-objetos-reutilizables">Cuarta mejora: transformaci√≥n en clases y objetos reutilizables.</h4>

<p>Ahora vamos a dejar el <strong>c√≥digo bien organizado</strong> y a mostrarlo (casi) completo.</p>

<p>Lo que haremos es <strong>empaquetarlo todo en clases reutilizables</strong>. Observa que sigue siendo el mismo c√≥digo fuente, solo que empaquetado en clases y m√©todos. Lo √∫nico que queda fuera de una clase es la instanciaci√≥n inicial del objeto controlador.</p>

<p>F√≠jate bien en c√≥mo hemos convertido las vistas en una clase con un m√©todo <em>show()</em> que nos servir√° para mostrar cualquier vista y reutilizar el mismo <em>header</em> y el mismo <em>footer</em>. Cada vista se programar√° en un archivo independiente que deberemos organizar en directorios y subdirectorios. De momento, nuestra aplicaci√≥n solo tiene una vista llamada <em>showAllArticles</em>, pero se podr√≠an visualizar todas las necesarias usando el m√©todo <em>show()</em>.</p>

<p>Otra cosa que quiero que observes con mucha atenci√≥n es <strong>el punto de entrada a la aplicaci√≥n</strong> (archivo <strong><em>index.php</em></strong>), porque lo hemos dejado preparado para poder a√±adir nuevas funciones al programa con posterioridad, as√≠ como varios controladores. El m√©todo que se ejecutar√° depender√° no solo de la <strong>variable <em>‚Äúaction‚Äù</em></strong> que se pasa por GET, sino tambi√©n de otra variable llamada <strong><em>‚Äúcontroller‚Äù</em></strong>, que tambi√©n se pasa por GET, y que contendr√° el nombre de la clase del controlador.</p>

<p>As√≠, para invocar, por ejemplo, el m√©todo <em>showAll()</em> del controlador <em>ArticlesController</em>, la ruta deber√≠a ser esta:</p>

<p><code>
http://mi-servidor/index.php?controller=ArticlesController&amp;action=showAll
</code></p>

<p>Este <em>index.php</em> es tan gen√©rico que <strong>te puede servir para montar otras aplicaciones MVC</strong>.</p>

<p><strong>Punto de entrada a la aplicaci√≥n (enrutador)</strong> (<em>index.php</em>)</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
  <span class="k">include</span><span class="p">(</span><span class="s2">"articlesController.php"</span><span class="p">);</span>

  <span class="c1">// Miramos a ver si se indica alguna acci√≥n en la URL</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">isset</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'action'</span><span class="p">]))</span> <span class="p">{</span>
    <span class="c1">// No hay acci√≥n en la URL. Usamos la acci√≥n por defecto (main). Puedes cambiarla por cualquier otra que vaya bien con tu aplicaci√≥n.</span>
    <span class="nv">$action</span> <span class="o">=</span> <span class="s2">"main"</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="c1">// S√≠ hay acci√≥n en la URL. Recuperamos su nombre.</span>
    <span class="nv">$action</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'action'</span><span class="p">];</span>
  <span class="p">}</span>

  <span class="c1">// Hacemos lo mismo con el nombre del controlador</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">isset</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'controller'</span><span class="p">]))</span> <span class="p">{</span>
    <span class="c1">// No hay controlador en la URL. Asignaremos un controlador por defecto (Articles). Por supuesto, puedes cambiarlo por otro que vaya bien con tu aplicaci√≥n.</span>
    <span class="nv">$controllerClassName</span> <span class="o">=</span> <span class="s2">"ArticlesController"</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="c1">// S√≠ hay controlador en la URL. Recuperamos su nombre.</span>
    <span class="nv">$controllerClassName</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'controller'</span><span class="p">];</span>
  <span class="p">}</span>

  <span class="c1">// Instanciamos el controlador e invocamos al m√©todo que se llama como la acci√≥n</span>
  <span class="nv">$controller</span> <span class="o">=</span> <span class="k">new</span> <span class="nv">$controllerClassName</span><span class="p">();</span>
  <span class="nv">$controller</span><span class="o">-&gt;</span><span class="nv">$action</span><span class="p">();</span>
<span class="cp">?&gt;</span>

</code></pre></div></div>

<p><strong>Controlador de art√≠culos</strong> (articlesController.php)</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Controlador. Deber√≠a tener un m√©todo por cada posible valor de la variable "action".</span>
<span class="k">include</span> <span class="p">(</span><span class="s2">"view.php"</span><span class="p">);</span>
<span class="k">include</span> <span class="p">(</span><span class="s2">"articles.php"</span><span class="p">);</span>

<span class="kd">class</span> <span class="nc">ArticlesController</span> <span class="p">{</span>

   <span class="k">public</span> <span class="k">function</span> <span class="n">showAll</span><span class="p">()</span> <span class="p">{</span>
      <span class="nv">$data</span><span class="p">[</span><span class="s1">'articles'</span><span class="p">]</span> <span class="o">=</span> <span class="nc">Articles</span><span class="o">::</span><span class="nf">getAll</span><span class="p">();</span>
      <span class="nc">View</span><span class="o">::</span><span class="nf">show</span><span class="p">(</span><span class="s2">"showAllArticles"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
   <span class="p">}</span>

   <span class="c1">// A√±adir a partir de aqu√≠ un m√©todo por cada posible valor de la variable "action"</span>

<span class="p">}</span>
</code></pre></div></div>

<p><strong>Clase vista</strong> (view.php)</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="kd">class</span> <span class="nc">View</span>
<span class="p">{</span>
   <span class="k">public</span> <span class="k">function</span> <span class="n">show</span><span class="p">(</span><span class="nv">$viewName</span><span class="p">,</span> <span class="nv">$data</span><span class="o">=</span><span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">include</span><span class="p">(</span><span class="s2">"header.php"</span><span class="p">);</span>
      <span class="k">include</span><span class="p">(</span><span class="s2">"</span><span class="nv">$viewName</span><span class="s2">.php"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
      <span class="k">include</span><span class="p">(</span><span class="s2">"footer.php"</span><span class="p">);</span>
   <span class="p">}</span>
<span class="p">}</span>

<span class="cp">?&gt;</span>
</code></pre></div></div>

<p><strong>Vista showAllArticles</strong> (showAllArticles.php)</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h1&gt;</span>Listado de Articulos<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;table&gt;</span>
     <span class="nt">&lt;tr&gt;</span> <span class="nt">&lt;th&gt;</span>Fecha<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;th&gt;</span>Titulo<span class="nt">&lt;/th&gt;</span> <span class="nt">&lt;/tr&gt;</span>
     <span class="cp">&lt;?php 
     $articles = $data['articles'];
     foreach($articles as $article) {
        echo "&lt;tr&gt;
           &lt;td&gt;".$articles['fecha']."&lt;/td&gt;
           &lt;td&gt;".$articles['titulo']."&lt;/td&gt;
        &lt;/tr&gt;";
     }
     ?&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div>

<p><strong>Modelo - Capa de acceso a datos</strong> (articles.php)</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">include</span> <span class="s2">"db.php"</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">Articles</span> <span class="p">{</span>

  <span class="k">public</span> <span class="k">function</span> <span class="n">getAll</span><span class="p">()</span> <span class="p">{</span>
    <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Db</span><span class="p">();</span>
    <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">createConnection</span><span class="p">(</span><span class="s1">'mi-host'</span><span class="p">,</span> <span class="s1">'mi-usuario'</span><span class="p">,</span> <span class="s1">'mi-clave'</span><span class="p">,</span> <span class="s1">'mi-base-de-datos'</span><span class="p">);</span>
    <span class="nv">$articles</span> <span class="o">=</span> <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">dataQuery</span><span class="p">(</span><span class="s1">'SELECT fecha, titulo FROM articulo'</span><span class="p">);</span>
    <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">closeConnection</span><span class="p">();</span>
    <span class="k">return</span> <span class="nv">$articles</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>Modelo - Capa de abstracci√≥n de datos</strong> (db.php)</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Db</span> <span class="p">{</span>

  <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span> <span class="c1">// Aqu√≠ guardaremos la conexi√≥n con la base de datos</span>

  <span class="cd">/**
   * Abre la conexi√≥n con la base de datos
   * @param $server URL del servidor de la base de datos
   * @param $username Nombre de usuario en ese servidor
   * @param $pass Contrase√±a
   * @param $dbname Nombre de la base de datos
   * @return 0 si la conexi√≥n se realiza con normalidad y -1 en caso de error
   */</span>
  <span class="k">function</span> <span class="n">createConnection</span><span class="p">(</span><span class="nv">$server</span><span class="p">,</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$pass</span><span class="p">,</span> <span class="nv">$dbname</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">mysqli</span><span class="p">(</span><span class="nv">$servidor</span><span class="p">,</span> <span class="nv">$usuario</span><span class="p">,</span> <span class="nv">$clave</span><span class="p">,</span> <span class="nv">$dbname</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$db</span><span class="o">-&gt;</span><span class="n">connect_errno</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
    <span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="cd">/**
   * Cierra la conexi√≥n con la base de datos
   */</span>
  <span class="k">function</span> <span class="n">closeConnection</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="p">)</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">close</span><span class="p">();</span>
  <span class="p">}</span>

  <span class="cd">/**
   * Lanza una consulta (SELECT) contra la base de datos.
   * ¬°Ojo! Este m√©todo solo funcionar√° con sentencias SELECT.
   * @param $sql El c√≥digo de la consulta que se quiere lanzar
   * @return Un array bidimensional con los resultados de la consulta (estar√° vac√≠o si la consulta no devolvi√≥ nada)
   */</span>
  <span class="k">function</span> <span class="n">dataQuery</span><span class="p">(</span><span class="nv">$sql</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$res</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
    <span class="nv">$resArray</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$res</span><span class="p">)</span> <span class="p">{</span>
      <span class="nv">$resArray</span> <span class="o">=</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="nf">fetch_all</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nv">$resArray</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="cd">/**
   * Lanza una sentencia de manipulaci√≥n de datos contra la base de datos.
   * ¬°Ojo! Este m√©todo solo funcionar√° con sentencias INSERT, UPDATE, DELETE y similares.
   * @param $sql El c√≥digo de la consulta que se quiere lanzar
   * @return El n√∫mero de filas insertadas, modificadas o borradas por la sentencia SQL (0 si no produjo ning√∫n efecto).
   */</span>
  <span class="k">function</span> <span class="n">dataManipulation</span><span class="p">(</span><span class="nv">$sql</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="n">affected_rows</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="quinta-y-√∫ltima-mejora-a√±adiendo-un-modelo-gen√©rico">Quinta (y √∫ltima) mejora: a√±adiendo un modelo gen√©rico</h4>

<p>En todos los modelos nos solemos encontrar una serie de operaciones que se repiten una y otra vez, como:</p>

<ul>
  <li>Obtener todos los registros de una tabla.</li>
  <li>Obtener un registro de una tabla buscando por id.</li>
  <li>Borrar un registro a partir de su id.</li>
  <li>Insertar un registro.</li>
  <li>Modificar un registro.</li>
</ul>

<p>Podemos programar un modelo gen√©rico que haga estas cosas <em>sea cual sea la tabla de la que se trate</em>. As√≠ no tendremos que escribir una y otr avez las mismas operaciones para cada uno de los modelos: bastar√° con que nuestros modelos <strong>hereden</strong> de este modelo gen√©rico, y todas esas operaciones ya estar√°n disponibles sin escribir ni una l√≠nea de c√≥digo.</p>

<p>Vamos a llamar <strong><em>Model</em></strong> a ese modelo gen√©rico. Observa bien el siguiente c√≥digo:</p>

<p><strong>Modelo gen√©rico</strong> (model.php)</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Model</span> <span class="p">{</span>

  <span class="k">protected</span> <span class="nv">$table</span><span class="p">;</span>  <span class="c1">// Aqu√≠ guardaremos el nombre de la tabla a la que estamos accediendo</span>
  <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span>       <span class="c1">// Y aqu√≠ la capa de abstracci√≥n de datos</span>

  <span class="k">public</span> <span class="k">function</span> <span class="n">__construct</span><span class="p">(</span><span class="nv">$tableName</span><span class="p">)</span>  <span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">table</span> <span class="o">=</span> <span class="nv">$tableName</span><span class="p">;</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Db</span><span class="p">();</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">createConnection</span><span class="p">(</span><span class="s1">'mi-host'</span><span class="p">,</span> <span class="s1">'mi-usuario'</span><span class="p">,</span> <span class="s1">'mi-clave'</span><span class="p">,</span> <span class="s1">'mi-base-de-datos'</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="k">public</span> <span class="k">function</span> <span class="n">getAll</span><span class="p">()</span> <span class="p">{</span>
    <span class="nv">$list</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">dataQuery</span><span class="p">(</span><span class="s1">'SELECT * FROM '</span><span class="mf">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="n">table</span><span class="p">);</span>
    <span class="nv">$db</span><span class="o">-&gt;</span><span class="nf">closeConnection</span><span class="p">();</span>
    <span class="k">return</span> <span class="nv">$list</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>¬°Acabamos de crear un m√©todo <em>getAll()</em> gen√©rico que funcionar√° con cualquier tabla!</p>

<p>Mira ahora en qu√© poquita cosa se queda nuestro <strong>modelo <em>Articles</em></strong>:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">include</span> <span class="s2">"db.php"</span><span class="p">;</span>

<span class="kd">class</span> <span class="nc">Articles</span> <span class="kd">extends</span> <span class="nc">Model</span> <span class="p">{</span>

  <span class="k">public</span> <span class="kt">__construct</span><span class="p">()</span> <span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">table</span> <span class="o">=</span> <span class="s2">"articles"</span><span class="p">;</span>
  <span class="p">}</span>

<span class="p">}</span>
</code></pre></div></div>

<p>Como el modelo <em>Articles</em> hereda ahora del modelo gen√©rico, <em>Model</em>, resulta que ya posee un m√©todo llamado <em>getAll()</em> que, por lo tanto, no tenemos que programar. A cambio, todo lo que tenemos que hacer es asignar el valor correcto al atributo <em>$this-&gt;table</em>, para que el modelo gen√©rico <em>Model</em> sepa el nombre de la tabla con la que tiene que trabajar.</p>

<p>Si ampli√°semos nuestro modelo gen√©rico, <em>Model</em>, con m√°s funciones gen√©ricas, todas ellas se heredar√≠an en <em>Articles</em> (y en cualquier otro modelo de la aplicaci√≥n). Las √∫nicas funciones que tendr√≠amos que escribir en <em>Articles</em> ser√≠an las espec√≠ficas de ese modelo, si es que tiene alguna. Por experiencia, te puedo decir que la mayor√≠a de los modelos no necesitar√°n ninguna funci√≥n espec√≠fica adicional, quedando as√≠ su c√≥digo reducido a la m√≠nima expresi√≥n.</p>

<p>Vamos a a√±adir algunas funciones m√°s a nuestro modelo gen√©rico:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Model</span> <span class="p">{</span>

  <span class="k">protected</span> <span class="nv">$table</span><span class="p">;</span>  <span class="c1">// Aqu√≠ guardaremos el nombre de la tabla a la que estamos accediendo</span>
  <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span>       <span class="c1">// Y aqu√≠ la capa de abstracci√≥n de datos</span>

  <span class="k">public</span> <span class="k">function</span> <span class="n">__construct</span><span class="p">(</span><span class="nv">$tableName</span><span class="p">)</span>  <span class="p">{</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">table</span> <span class="o">=</span> <span class="nv">$tableName</span><span class="p">;</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Db</span><span class="p">();</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">createConnection</span><span class="p">(</span><span class="s1">'mi-host'</span><span class="p">,</span> <span class="s1">'mi-usuario'</span><span class="p">,</span> <span class="s1">'mi-clave'</span><span class="p">,</span> <span class="s1">'mi-base-de-datos'</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="k">public</span> <span class="k">function</span> <span class="n">getAll</span><span class="p">()</span> <span class="p">{</span>
    <span class="nv">$list</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">dataQuery</span><span class="p">(</span><span class="s2">"SELECT * FROM "</span><span class="mf">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="n">table</span><span class="p">);</span>
    <span class="k">return</span> <span class="nv">$list</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="k">public</span> <span class="k">function</span> <span class="n">get</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$record</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">dataQuery</span><span class="p">(</span><span class="s2">"SELECT * FROM "</span><span class="mf">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="n">table</span><span class="mf">.</span><span class="s2">" WHERE id = "</span><span class="mf">.</span><span class="nv">$id</span><span class="p">);</span>
    <span class="k">return</span> <span class="nv">$record</span><span class="p">;</span>
  <span class="p">}</span> 

  <span class="k">public</span> <span class="k">function</span> <span class="n">delete</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">dataQuery</span><span class="p">(</span><span class="s2">"DELETE FROM "</span><span class="mf">.</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="n">table</span><span class="mf">.</span><span class="s2">" WHERE id = "</span><span class="mf">.</span><span class="nv">$id</span><span class="p">);</span>
    <span class="k">return</span> <span class="nv">$result</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Solo faltar√≠a crear una funci√≥n <em>insert()</em> y otra <em>update()</em> para tener un CRUD completo en nuestro modelo gen√©rico. ¬øTe atreves a hacerlo? (Advertencia: generalizar estas dos funciones es bastante m√°s dif√≠cil que todas las dem√°s).</p>

<h2 id="174-el-patr√≥n-mvc-en-la-teor√≠a">1.7.4. El patr√≥n MVC en la teor√≠a</h2>

<p>Ahora que hemos aprendido a manejarnos con el patr√≥n MVC por medio de un ejemplo, estamos en condiciones de definirlo de manera m√°s te√≥rica y entender mejor esa defici√≥n.</p>

<p><em>(Si no has le√≠do el ejemplo pr√°ctico del <a href="../mvc/#173-mvc-en-la-pr√°ctica-una-implementaci√≥n-incremental">Apartado 1.7.3</a>, es posible que las siguientes definiciones no acaben de tener sentido para ti. No te preocupes, lo ir√°s pillando m√°s adelante conforme practiques con el patr√≥n MVC).</em></p>

<p>El patr√≥n MVC consiste, pues, en dividir la aplicaci√≥n en tres capas:</p>

<ul>
  <li>
    <p><strong>Los modelos</strong>, donde se programa la <em>l√≥gica de negocio</em>. De esa forma tan rimbombante se refiere la literatura t√©cnica al acceso a los datos con los filtros, algoritmos y restricciones que el sistema imponga.</p>

    <p>Dicho en palabras m√°s sencillas, esto significa que en los modelos debemos colocar todo el c√≥digo de acceso a la base de datos o a cualquier otro recurso del servidor (como las variables de sesi√≥n, por ejemplo). Los modelos deben empaquetar esos datos en objetos est√°ndar de PHP (como arrays) y devolverlos al controlador.</p>

    <p>Lo m√°s pr√°ctico es <strong>crear un modelo para cada tabla maestra</strong> de la base de datos.</p>

    <p>Los <em>frameworks</em> automatizan los m√©todos m√°s t√≠picos de cada modelo, como insertar un registro, borrar, actualizar, consultar uno o consultar todos. Ya veremos de qu√© formas tan alucinantes se las ingenian para hacer todo esto con un m√≠nimo de esfuerzo por nuestra parte y, por supuesto, sin escribir el mismo c√≥digo una y otra vez.</p>
  </li>
  <li>
    <p><strong>Las vistas</strong>, donde se programan todas las salidas HTML que el usuario final va a ver y con las que va a interactuar.</p>

    <p>El c√≥digo Javascript y CSS, por lo tanto, forma parte de las vistas.</p>

    <p>En las vistas estar√° el grueso del c√≥digo de cualquier aplicaci√≥n. Los <em>frameworks</em> m√°s avanzados incluyen sistemas de <strong>plantillas</strong> para reutilizar fragmentos de vistas, as√≠ como lenguajes adicionales para simplificar la codificaci√≥n de las vistas. Pero, si programamos en PHP cl√°sico, tendremos que construir las vistas manualmente.</p>
  </li>
  <li>
    <p><strong>Los controladores</strong>, donde se captura cada petici√≥n del usuario y se dirige el flujo de ejecuci√≥n, invocando a los modelos y a las vistas en el orden adecuado.</p>

    <p>En una aplicaci√≥n peque√±a, bastar√° con tener un controlador para todo. Cuando la aplicaci√≥n crece, suele hacerse <strong>un controlador por cada modelo</strong>, es decir, un controlador por cada tabla maestra.</p>

    <p>Los controladores estar√°n compuestos por una colecci√≥n de m√©todos, uno para cada funcionalidad de la aplicaci√≥n. El m√©todo que se ejecute en cada ocasi√≥n estar√° controlado por la URL. En concreto, por la variable <em>‚Äúaction‚Äù</em> que se pasar√° por GET, aunque, por supuesto, puedes ponerle otro nombre si <em>‚Äúaction‚Äù</em> no te gusta.</p>

    <p>En los <em>frameworks</em>, esta variable ‚Äúaction‚Äù se transforma en una URL limpia que, a trav√©s de un objeto adicional llamado <strong>enrutador</strong>, termina provocando la invocaci√≥n del m√©todo adecuado.</p>

    <p>Es decir: en una aplicaci√≥n MVC como las que hemos visto hasta ahora, tendremos una ruta como esta para, por ejemplo, consultar el art√≠culo con id 37:</p>

    <p><code>https://mi-servidor/index.php?action=showArticle&amp;idArticle=37</code></p>

    <p>En cambio, en un <em>framework</em> avanzado, la ruta tendr√° un aspecto m√°s limpio para hacer lo mismo. Algo as√≠ como:</p>

    <p><code>https://mi-servidor/articles/show/37</code></p>

    <p>Y el enrutador se encargar√° trocear esa URL y extraer de ella la informaci√≥n para instanciar el controlador adecuado y llamar al m√©todo correcto.</p>
  </li>
</ul>

<h2 id="175-una-implementaci√≥n-completa-biblioteca">1.7.5. Una implementaci√≥n completa: Biblioteca</h2>

<p>A continuaci√≥n encontrar√°s una posible implementaci√≥n de una Biblioteca hecha con PHP. La implementaci√≥n sigue la arquitectura MVC, pero ten en cuenta que <strong>solo es una primera aproximaci√≥n que se puede mejorar en muchos aspectos</strong>, como, por ejemplo:</p>

<ul>
  <li>La creaci√≥n de un enrutador.</li>
  <li>Un mecanismo de control de acceso de usuarios.</li>
  <li>La creaci√≥n de una capa de abstracci√≥n de datos que independice los modelos de la base de datos.</li>
  <li>La creaci√≥n de un modelo gen√©rico (del que herdar√≠an el resto de modelos), que implementar√≠a los m√©todos que aparecen la mayor√≠a de los modelos, como get($id), getAll(), delete($id), etc.</li>
  <li>Controladores m√∫ltiples (uno por modelo)</li>
  <li>Archivo de configuraci√≥n con los datos de conexi√≥n a la base de datos, para poder cambiarlos con facilidad y sin tocar el c√≥digo de los modelos.</li>
</ul>

<p>Como ves, es una soluci√≥n imperfecta en muchos sentidos, pero ilustra bastante bien los principios del MVC.</p>

<p>Esta biblioteca, adem√°s, es una simplificaci√≥n de una biblioteca real. Por el momento, lo √∫nico que puede hacer es el mantenimiento de los libros (dar de alta nuevos libros, modificarlos, borrarlos, buscarlos, etc). La hemos mantenido sencilla para que sea m√°s f√°cil de seguir y el volumen del c√≥digo no se dispare, pero es completamente funcional, y puedes a√±adirle nuevas funciones si quieres.</p>

<h3 id="controlador-indexphp">Controlador (index.php)</h3>

<p>En aplicaciones grandes suele haber varios controladores. Aqu√≠, de momento, vamos a apa√±arnos solo con uno.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- *** CONTROLADOR (CON ENRUTAMIENTO PRIMITIVO) *** --&gt;</span>
<span class="cp">&lt;?php</span>
    <span class="k">include_once</span><span class="p">(</span><span class="s2">"models/libro.php"</span><span class="p">);</span>  <span class="c1">// Modelos</span>
    <span class="k">include_once</span><span class="p">(</span><span class="s2">"models/persona.php"</span><span class="p">);</span>
    <span class="k">include_once</span><span class="p">(</span><span class="s2">"view.php"</span><span class="p">);</span>   <span class="c1">// Plantilla de vista</span>

    <span class="c1">// Miramos el valor de la variable "action", si existe. Si no, le asignamos una acci√≥n por defecto</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"action"</span><span class="p">]))</span> <span class="p">{</span>
        <span class="nv">$action</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"action"</span><span class="p">];</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nv">$action</span> <span class="o">=</span> <span class="s2">"mostrarListaLibros"</span><span class="p">;</span>  <span class="c1">// Acci√≥n por defecto</span>
    <span class="p">}</span>

    <span class="c1">// Creamos un objeto de tipo Biblioteca y llamamos al m√©todo $action()</span>
    <span class="nv">$biblio</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Biblioteca</span><span class="p">();</span>
    <span class="nv">$biblio</span><span class="o">-&gt;</span><span class="nv">$action</span><span class="p">();</span>

    <span class="kd">class</span> <span class="nc">Biblioteca</span> <span class="p">{</span>
        <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span>     <span class="c1">// Conexi√≥n con la base de datos</span>
        <span class="k">private</span> <span class="nv">$libro</span><span class="p">,</span> <span class="nv">$persona</span><span class="p">;</span> <span class="c1">// Modelos</span>

        <span class="k">public</span> <span class="k">function</span> <span class="n">__construct</span><span class="p">()</span> <span class="p">{</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Libro</span><span class="p">();</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">persona</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Persona</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="c1">// --------------------------------- MOSTRAR LISTA DE LIBROS ----------------------------------------</span>
        <span class="k">public</span> <span class="k">function</span> <span class="n">mostrarListaLibros</span><span class="p">()</span> <span class="p">{</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"listaLibros"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">getAll</span><span class="p">();</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"libro/all"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// --------------------------------- FORMULARIO ALTA DE LIBROS ----------------------------------------</span>

        <span class="k">public</span> <span class="k">function</span> <span class="n">formularioInsertarLibros</span><span class="p">()</span> <span class="p">{</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"todosLosAutores"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">persona</span><span class="o">-&gt;</span><span class="nf">getAll</span><span class="p">();</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"autoresLibro"</span><span class="p">]</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>  <span class="c1">// Array vac√≠o (el libro a√∫n no tiene autores asignados)</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"libro/form"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// --------------------------------- INSERTAR LIBROS ----------------------------------------</span>

        <span class="k">public</span> <span class="k">function</span> <span class="n">insertarLibro</span><span class="p">()</span> <span class="p">{</span>
            <span class="c1">// Primero, recuperamos todos los datos del formulario</span>
            <span class="nv">$titulo</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"titulo"</span><span class="p">];</span>
            <span class="nv">$genero</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"genero"</span><span class="p">];</span>
            <span class="nv">$pais</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"pais"</span><span class="p">];</span>
            <span class="nv">$ano</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"ano"</span><span class="p">];</span>
            <span class="nv">$numPaginas</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"numPaginas"</span><span class="p">];</span>
            <span class="nv">$autores</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"autor"</span><span class="p">];</span>            

            <span class="c1">// Le pedimos al modelo que guarde el libro en la BD</span>
            <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">insert</span><span class="p">(</span><span class="nv">$titulo</span><span class="p">,</span> <span class="nv">$genero</span><span class="p">,</span> <span class="nv">$pais</span><span class="p">,</span> <span class="nv">$ano</span><span class="p">,</span> <span class="nv">$numPaginas</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="c1">// Si la inserci√≥n del libro ha funcionado, continuamos insertando los autores, pero</span>
                <span class="c1">// necesitamos conocer el id del libro que acabamos de insertar</span>
                <span class="nv">$idLibro</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">getMaxId</span><span class="p">();</span>
                <span class="c1">// Ya podemos insertar todos los autores junto con el libro en "escriben"</span>
                <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">insertAutores</span><span class="p">(</span><span class="nv">$idLibro</span><span class="p">,</span> <span class="nv">$autores</span><span class="p">);</span>
                <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nv">$data</span><span class="p">[</span><span class="s2">"info"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Libro insertado con √©xito"</span><span class="p">;</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="nv">$data</span><span class="p">[</span><span class="s2">"error"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Error al insertar los autores del libro"</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="c1">// Si la inserci√≥n del libro ha fallado, mostramos mensaje de error</span>
                <span class="nv">$data</span><span class="p">[</span><span class="s2">"error"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Error al insertar el libro"</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"listaLibros"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">getAll</span><span class="p">();</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"libro/all"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>

        <span class="p">}</span>

        <span class="c1">// --------------------------------- BORRAR LIBROS ----------------------------------------</span>

        <span class="k">public</span> <span class="k">function</span> <span class="n">borrarLibro</span><span class="p">()</span> <span class="p">{</span>
            <span class="c1">// Recuperamos el id del libro que hay que borrar</span>
            <span class="nv">$idLibro</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"idLibro"</span><span class="p">];</span>
            <span class="c1">// Pedimos al modelo que intente borrar el libro</span>
            <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nb">delete</span><span class="p">(</span><span class="nv">$idLibro</span><span class="p">);</span>
            <span class="c1">// Comprobamos si el borrado ha tenido √©xito</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                <span class="nv">$data</span><span class="p">[</span><span class="s2">"error"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Ha ocurrido un error al borrar el libro. Por favor, int√©ntelo de nuevo"</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nv">$data</span><span class="p">[</span><span class="s2">"info"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Libro borrado con √©xito"</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"listaLibros"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">getAll</span><span class="p">();</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"libro/all"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>

        <span class="p">}</span>

        <span class="c1">// --------------------------------- FORMULARIO MODIFICAR LIBROS ----------------------------------------</span>

        <span class="k">public</span> <span class="k">function</span> <span class="n">formularioModificarLibro</span><span class="p">()</span> <span class="p">{</span>
            <span class="c1">// Recuperamos los datos del libro a modificar</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"libro"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">get</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"idLibro"</span><span class="p">]);</span>
            <span class="c1">// Renderizamos la vista de inserci√≥n de libros, pero envi√°ndole los datos del libro recuperado.</span>
            <span class="c1">// Esa vista necesitar√° la lista de todos los autores y, adem√°s, la lista</span>
            <span class="c1">// de los autores de este libro en concreto.</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"todosLosAutores"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">persona</span><span class="o">-&gt;</span><span class="nf">getAll</span><span class="p">();</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"autoresLibro"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">persona</span><span class="o">-&gt;</span><span class="nf">getAutores</span><span class="p">(</span><span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"idLibro"</span><span class="p">]);</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"libro/form"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// --------------------------------- MODIFICAR LIBROS ----------------------------------------</span>

        <span class="k">public</span> <span class="k">function</span> <span class="n">modificarLibro</span><span class="p">()</span> <span class="p">{</span>
            <span class="c1">// Primero, recuperamos todos los datos del formulario</span>
            <span class="nv">$idLibro</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"idLibro"</span><span class="p">];</span>
            <span class="nv">$titulo</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"titulo"</span><span class="p">];</span>
            <span class="nv">$genero</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"genero"</span><span class="p">];</span>
            <span class="nv">$pais</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"pais"</span><span class="p">];</span>
            <span class="nv">$ano</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"ano"</span><span class="p">];</span>
            <span class="nv">$numPaginas</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"numPaginas"</span><span class="p">];</span>
            <span class="nv">$autores</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"autor"</span><span class="p">];</span>

            <span class="c1">// Pedimos al modelo que haga el update</span>
            <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">update</span><span class="p">(</span><span class="nv">$idLibro</span><span class="p">,</span> <span class="nv">$titulo</span><span class="p">,</span> <span class="nv">$genero</span><span class="p">,</span> <span class="nv">$pais</span><span class="p">,</span> <span class="nv">$ano</span><span class="p">,</span> <span class="nv">$numPaginas</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                <span class="nv">$data</span><span class="p">[</span><span class="s2">"info"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Libro actualizado con √©xito"</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="c1">// Si la modificaci√≥n del libro ha fallado, mostramos mensaje de error</span>
                <span class="nv">$data</span><span class="p">[</span><span class="s2">"error"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Ha ocurrido un error al modificar el libro. Por favor, int√©ntelo m√°s tarde"</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"listaLibros"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">getAll</span><span class="p">();</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"libro/all"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// --------------------------------- BUSCAR LIBROS ----------------------------------------</span>

        <span class="k">public</span> <span class="k">function</span> <span class="n">buscarLibros</span><span class="p">()</span> <span class="p">{</span>
            <span class="c1">// Recuperamos el texto de b√∫squeda de la variable de formulario</span>
            <span class="nv">$textoBusqueda</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s2">"textoBusqueda"</span><span class="p">];</span>
            <span class="c1">// Buscamos los libros que coinciden con la b√∫squeda</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"listaLibros"</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">libro</span><span class="o">-&gt;</span><span class="nf">search</span><span class="p">(</span><span class="nv">$textoBusqueda</span><span class="p">);</span>
            <span class="nv">$data</span><span class="p">[</span><span class="s2">"info"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Resultados de la b√∫squeda: &lt;i&gt;</span><span class="nv">$textoBusqueda</span><span class="s2">&lt;/i&gt;"</span><span class="p">;</span>
            <span class="c1">// Mostramos el resultado en la misma vista que la lista completa de libros</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"libro/all"</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// --------------------------------- MOSTRAR LISTA DE AUTORES ----------------------------------------</span>
        <span class="k">public</span> <span class="k">function</span> <span class="n">mostrarListaAutores</span><span class="p">()</span> <span class="p">{</span>
            <span class="c1">// Esto est√° en construcci√≥n. Llamaremos a una vista inexistente.</span>
            <span class="nc">View</span><span class="o">::</span><span class="nf">render</span><span class="p">(</span><span class="s2">"autor/all"</span><span class="p">);</span>
        <span class="p">}</span>        

    <span class="p">}</span> <span class="c1">// class</span>
</code></pre></div></div>

<h3 id="modelo-de-libros-modelslibrophp">Modelo de libros (models/libro.php)</h3>

<p>El modelo de libros realiza todos los accesos a la base de datos para trabajar con la tabla <em>Libros</em>. Hemos utilizado PDO para ello.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="c1">// *** MODELO DE LIBROS CON PDO ***</span>

<span class="kd">class</span> <span class="nc">Libro</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span>

    <span class="c1">// Constructor. Habilita la conexi√≥n con la base de datos.</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">__construct</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$dsn</span> <span class="o">=</span> <span class="s2">"mysql:host=mariadb;dbname=biblioteca;charset=utf8mb4"</span><span class="p">;</span>
        <span class="nv">$usuario</span> <span class="o">=</span> <span class="s2">"user"</span><span class="p">;</span>
        <span class="nv">$clave</span> <span class="o">=</span> <span class="s2">"1234"</span><span class="p">;</span>

        <span class="k">try</span> <span class="p">{</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PDO</span><span class="p">(</span><span class="nv">$dsn</span><span class="p">,</span> <span class="nv">$usuario</span><span class="p">,</span> <span class="nv">$clave</span><span class="p">);</span>
            <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">setAttribute</span><span class="p">(</span><span class="no">PDO</span><span class="o">::</span><span class="no">ATTR_ERRMODE</span><span class="p">,</span> <span class="no">PDO</span><span class="o">::</span><span class="no">ERRMODE_EXCEPTION</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nc">PDOException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">die</span><span class="p">(</span><span class="s2">"Error en la conexi√≥n: "</span> <span class="mf">.</span> <span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// Obtiene todos los libros con sus autores</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">getAll</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT * FROM libros
                INNER JOIN escriben ON libros.idLibro = escriben.idLibro
                INNER JOIN personas ON escriben.idPersona = personas.idPersona
                ORDER BY libros.titulo"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="k">return</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">fetchAll</span><span class="p">(</span><span class="no">PDO</span><span class="o">::</span><span class="no">FETCH_OBJ</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Obtiene un libro por su ID</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">get</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT * FROM libros WHERE idLibro = :id"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">prepare</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">execute</span><span class="p">([</span><span class="s2">":id"</span> <span class="o">=&gt;</span> <span class="nv">$id</span><span class="p">]);</span>
        <span class="k">return</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">fetch</span><span class="p">(</span><span class="no">PDO</span><span class="o">::</span><span class="no">FETCH_OBJ</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="c1">// Devuelve el √∫ltimo id asignado en la tabla libros</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">getMaxId</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT MAX(idLibro) AS ultimoIdLibro FROM libros"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">query</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="k">return</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">fetch</span><span class="p">(</span><span class="no">PDO</span><span class="o">::</span><span class="no">FETCH_OBJ</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ultimoIdLibro</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// Inserta un libro</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">insert</span><span class="p">(</span><span class="nv">$titulo</span><span class="p">,</span> <span class="nv">$genero</span><span class="p">,</span> <span class="nv">$pais</span><span class="p">,</span> <span class="nv">$ano</span><span class="p">,</span> <span class="nv">$numPaginas</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"INSERT INTO libros (titulo, genero, pais, ano, numPaginas)
                VALUES (:titulo, :genero, :pais, :ano, :numPaginas)"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">prepare</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">execute</span><span class="p">([</span>
            <span class="s2">":titulo"</span>     <span class="o">=&gt;</span> <span class="nv">$titulo</span><span class="p">,</span>
            <span class="s2">":genero"</span>     <span class="o">=&gt;</span> <span class="nv">$genero</span><span class="p">,</span>
            <span class="s2">":pais"</span>       <span class="o">=&gt;</span> <span class="nv">$pais</span><span class="p">,</span>
            <span class="s2">":ano"</span>        <span class="o">=&gt;</span> <span class="nv">$ano</span><span class="p">,</span>
            <span class="s2">":numPaginas"</span> <span class="o">=&gt;</span> <span class="nv">$numPaginas</span>
        <span class="p">]);</span>
        <span class="k">return</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">rowCount</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="c1">// Inserta los autores de un libro</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">insertAutores</span><span class="p">(</span><span class="nv">$idLibro</span><span class="p">,</span> <span class="nv">$autores</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"INSERT INTO escriben (idLibro, idPersona) VALUES (:idLibro, :idPersona)"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">prepare</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="nv">$correctos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$autores</span> <span class="k">as</span> <span class="nv">$idAutor</span><span class="p">)</span> <span class="p">{</span>
            <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">execute</span><span class="p">([</span>
                <span class="s2">":idLibro"</span>  <span class="o">=&gt;</span> <span class="nv">$idLibro</span><span class="p">,</span>
                <span class="s2">":idPersona"</span><span class="o">=&gt;</span> <span class="nv">$idAutor</span>
            <span class="p">]);</span>
            <span class="nv">$correctos</span> <span class="o">+=</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">rowCount</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="nv">$correctos</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// Actualiza un libro</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">update</span><span class="p">(</span><span class="nv">$idLibro</span><span class="p">,</span> <span class="nv">$titulo</span><span class="p">,</span> <span class="nv">$genero</span><span class="p">,</span> <span class="nv">$pais</span><span class="p">,</span> <span class="nv">$ano</span><span class="p">,</span> <span class="nv">$numPaginas</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"UPDATE libros SET
                    titulo = :titulo,
                    genero = :genero,
                    pais = :pais,
                    ano = :ano,
                    numPaginas = :numPaginas
                WHERE idLibro = :idLibro"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">prepare</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">execute</span><span class="p">([</span>
            <span class="s2">":titulo"</span>     <span class="o">=&gt;</span> <span class="nv">$titulo</span><span class="p">,</span>
            <span class="s2">":genero"</span>     <span class="o">=&gt;</span> <span class="nv">$genero</span><span class="p">,</span>
            <span class="s2">":pais"</span>       <span class="o">=&gt;</span> <span class="nv">$pais</span><span class="p">,</span>
            <span class="s2">":ano"</span>        <span class="o">=&gt;</span> <span class="nv">$ano</span><span class="p">,</span>
            <span class="s2">":numPaginas"</span> <span class="o">=&gt;</span> <span class="nv">$numPaginas</span><span class="p">,</span>
            <span class="s2">":idLibro"</span>    <span class="o">=&gt;</span> <span class="nv">$idLibro</span>
        <span class="p">]);</span>
        <span class="k">return</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">rowCount</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="c1">// Elimina un libro</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">delete</span><span class="p">(</span><span class="nv">$idLibro</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"DELETE FROM libros WHERE idLibro = :idLibro"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">prepare</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">execute</span><span class="p">([</span><span class="s2">":idLibro"</span> <span class="o">=&gt;</span> <span class="nv">$idLibro</span><span class="p">]);</span>
        <span class="k">return</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">rowCount</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="c1">// Busca un texto en libros y autores</span>
    <span class="k">public</span> <span class="k">function</span> <span class="n">search</span><span class="p">(</span><span class="nv">$textoBusqueda</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT * FROM libros
                INNER JOIN escriben ON libros.idLibro = escriben.idLibro
                INNER JOIN personas ON escriben.idPersona = personas.idPersona
                WHERE libros.titulo LIKE :texto
                   OR libros.genero LIKE :texto
                   OR personas.nombre LIKE :texto
                   OR personas.apellido LIKE :texto
                ORDER BY libros.titulo"</span><span class="p">;</span>
        <span class="nv">$stmt</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="n">db</span><span class="o">-&gt;</span><span class="nf">prepare</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
        <span class="nv">$param</span> <span class="o">=</span> <span class="s2">"%"</span> <span class="mf">.</span> <span class="nv">$textoBusqueda</span> <span class="mf">.</span> <span class="s2">"%"</span><span class="p">;</span>
        <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">execute</span><span class="p">([</span><span class="s2">":texto"</span> <span class="o">=&gt;</span> <span class="nv">$param</span><span class="p">]);</span>
        <span class="k">return</span> <span class="nv">$stmt</span><span class="o">-&gt;</span><span class="nf">fetchAll</span><span class="p">(</span><span class="no">PDO</span><span class="o">::</span><span class="no">FETCH_OBJ</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="plantilla-de-las-vistas-viewphp">Plantilla de las vistas (view.php)</h3>

<p>Esta clase proporciona un m√©todo con una plantilla muy primitiva, pero que es una buena forma de comprender qu√© es eso de las plantillas para las vistas.</p>

<p>F√≠jate que podemos usar este m√©todo desde cualquier controlador para mostrar cualquier vista, y que todas ellas compartir√°n la misma estructura sin necesidad de escribir una y otra vez el c√≥digo de la cabecera, el pie o el men√∫ de navegaci√≥n.</p>

<p>La variable <em>$data</em> contiene los datos que deben ser mostrados en la vista. Es una variable gen√©rica, que puede contener un array con cualquier cosa dentro (por ejemplo, una lista de libros, si la vista es ‚Äúmostrar todos los libros‚Äù). Cada vista en concreto se encargar√° de recorrer ese array y extraer de √©l los datos que necesite.</p>

<p>Si alguna vista no necesita ning√∫n dato, el array $data valdr√° <em>null</em>, que es su valor por defecto.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="c1">// PLANTILLA DE LAS VISTAS</span>

<span class="kd">class</span> <span class="nc">View</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="n">render</span><span class="p">(</span><span class="nv">$nombreVista</span><span class="p">,</span> <span class="nv">$data</span> <span class="o">=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">include</span><span class="p">(</span><span class="s2">"views/header.php"</span><span class="p">);</span>
        <span class="k">include</span><span class="p">(</span><span class="s2">"views/nav.php"</span><span class="p">);</span>
        <span class="k">include</span><span class="p">(</span><span class="s2">"views/</span><span class="nv">$nombreVista</span><span class="s2">.php"</span><span class="p">);</span>
        <span class="k">include</span><span class="p">(</span><span class="s2">"views/footer.php"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="vista-lista-de-libros-viewslibroallphp">Vista ‚Äúlista de libros‚Äù (views/libro/all.php)</h3>

<p>En esta vista se muestran todos los libros de la biblioteca junto con links para a√±adir, modificar y borrar libros.</p>

<p>Observa c√≥mo se construyen esos links para que proporcionen al controlador (index.php) toda la informaci√≥n que necesita para trabajar (como m√≠nimo, la variable <em>action</em>).</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="c1">// VISTA PARA LA LISTA DE LIBROS</span>

<span class="c1">// Recuperamos la lista de libros</span>
<span class="nv">$listaLibros</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">[</span><span class="s2">"listaLibros"</span><span class="p">];</span>

<span class="c1">// Si hay alg√∫n mensaje de feedback, lo mostramos</span>
<span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">"info"</span><span class="p">]))</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">"&lt;div style='color:blue'&gt;"</span><span class="mf">.</span><span class="nv">$data</span><span class="p">[</span><span class="s2">"info"</span><span class="p">]</span><span class="mf">.</span><span class="s2">"&lt;/div&gt;"</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$data</span><span class="p">[</span><span class="s2">"error"</span><span class="p">]))</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">"&lt;div style='color:red'&gt;"</span><span class="mf">.</span><span class="nv">$data</span><span class="p">[</span><span class="s2">"error"</span><span class="p">]</span><span class="mf">.</span><span class="s2">"&lt;/div&gt;"</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">echo</span> <span class="s2">"&lt;form action='index.php'&gt;
        &lt;input type='hidden' name='action' value='buscarLibros'&gt;
        &lt;input type='text' name='textoBusqueda'&gt;
        &lt;input type='submit' value='Buscar'&gt;
      &lt;/form&gt;&lt;br&gt;"</span><span class="p">;</span>

<span class="c1">// Ahora, la tabla con los datos de los libros</span>
<span class="k">if</span> <span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$listaLibros</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">"No hay datos"</span><span class="p">;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="s2">"&lt;table border ='1'&gt;"</span><span class="p">;</span>
  <span class="k">foreach</span> <span class="p">(</span><span class="nv">$listaLibros</span> <span class="k">as</span> <span class="nv">$fila</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"&lt;tr&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;td&gt;"</span> <span class="mf">.</span> <span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">titulo</span> <span class="mf">.</span> <span class="s2">"&lt;/td&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;td&gt;"</span> <span class="mf">.</span> <span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">genero</span> <span class="mf">.</span> <span class="s2">"&lt;/td&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;td&gt;"</span> <span class="mf">.</span> <span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">numPaginas</span> <span class="mf">.</span> <span class="s2">"&lt;/td&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;td&gt;"</span> <span class="mf">.</span> <span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">nombre</span> <span class="mf">.</span> <span class="s2">"&lt;/td&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;td&gt;"</span> <span class="mf">.</span> <span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">apellido</span> <span class="mf">.</span> <span class="s2">"&lt;/td&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;td&gt;&lt;a href='index.php?action=formularioModificarLibro&amp;idLibro="</span> <span class="mf">.</span> <span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">idLibro</span> <span class="mf">.</span> <span class="s2">"'&gt;Modificar&lt;/a&gt;&lt;/td&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;td&gt;&lt;a href='index.php?action=borrarLibro&amp;idLibro="</span> <span class="mf">.</span> <span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">idLibro</span> <span class="mf">.</span> <span class="s2">"'&gt;Borrar&lt;/a&gt;&lt;/td&gt;"</span><span class="p">;</span>
    <span class="k">echo</span> <span class="s2">"&lt;/tr&gt;"</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">echo</span> <span class="s2">"&lt;/table&gt;"</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">echo</span> <span class="s2">"&lt;p&gt;&lt;a href='index.php?action=formularioInsertarLibros'&gt;Nuevo&lt;/a&gt;&lt;/p&gt;"</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="vista-para-inserci√≥nmodificaci√≥n-de-libros-viewslibroformphp">Vista para inserci√≥n/modificaci√≥n de libros (views/libro/form.php)</h3>

<p>Esta vista se utilizar√° tanto para insertar nuevos libros como para modificar los que ya existen en la base de datos.</p>

<p>Es habitual usar la misma vista para las dos cosas, puesto que son pr√°cticamente iguales. La vista ser√° lo suficientemente ‚Äúlista‚Äù como para saber si est√° insertando o modificando: si la variable <em>$data</em> tiene los datos de libro, significar√° que estamos modificando un libro. En cambio, si la variable $data viene vac√≠a, significa que estamos a√±adiendo un libro nuevo.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="c1">// VISTA PARA INSERCI√ìN/EDICI√ìN DE LIBROS</span>

<span class="nb">extract</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>   <span class="c1">// Extrae el contenido de $data y lo convierte en variables individuales ($libro, $todosLosAutores y $autoresLibro)</span>

<span class="c1">// Vamos a usar la misma vista para insertar y modificar. Para saber si hacemos una cosa u otra,</span>
<span class="c1">// usaremos la variable $libro: si existe, es porque estamos modificando un libro. Si no, estamos insertando uno nuevo.</span>
<span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$libro</span><span class="p">))</span> <span class="p">{</span>   
    <span class="k">echo</span> <span class="s2">"&lt;h1&gt;Modificaci√≥n de libros&lt;/h1&gt;"</span><span class="p">;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"&lt;h1&gt;Inserci√≥n de libros&lt;/h1&gt;"</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// Sacamos los datos del libro (si existe) a variables individuales para mostrarlo en los inputs del formulario.</span>
<span class="c1">// (Si no hay libro, dejamos los campos en blanco y el formulario servir√° para inserci√≥n).</span>
<span class="nv">$idLibro</span> <span class="o">=</span> <span class="nv">$libro</span><span class="o">-&gt;</span><span class="n">idLibro</span> <span class="o">??</span> <span class="s2">""</span><span class="p">;</span> 
<span class="nv">$titulo</span> <span class="o">=</span> <span class="nv">$libro</span><span class="o">-&gt;</span><span class="n">titulo</span> <span class="o">??</span> <span class="s2">""</span><span class="p">;</span>
<span class="nv">$genero</span> <span class="o">=</span> <span class="nv">$libro</span><span class="o">-&gt;</span><span class="n">genero</span> <span class="o">??</span> <span class="s2">""</span><span class="p">;</span>
<span class="nv">$pais</span> <span class="o">=</span> <span class="nv">$libro</span><span class="o">-&gt;</span><span class="n">pais</span> <span class="o">??</span> <span class="s2">""</span><span class="p">;</span>
<span class="nv">$ano</span> <span class="o">=</span> <span class="nv">$libro</span><span class="o">-&gt;</span><span class="n">ano</span> <span class="o">??</span> <span class="s2">""</span><span class="p">;</span>
<span class="nv">$numPags</span> <span class="o">=</span> <span class="nv">$libro</span><span class="o">-&gt;</span><span class="n">numPaginas</span> <span class="o">??</span> <span class="s2">""</span><span class="p">;</span>

<span class="c1">// Creamos el formulario con los campos del libro</span>
<span class="k">echo</span> <span class="s2">"&lt;form action = 'index.php' method = 'get'&gt;
        &lt;input type='hidden' name='idLibro' value='"</span><span class="mf">.</span><span class="nv">$idLibro</span><span class="mf">.</span><span class="s2">"'&gt;
        T√≠tulo:&lt;input type='text' name='titulo' value='"</span><span class="mf">.</span><span class="nv">$titulo</span><span class="mf">.</span><span class="s2">"'&gt;&lt;br&gt;
        G√©nero:&lt;input type='text' name='genero' value='"</span><span class="mf">.</span><span class="nv">$genero</span><span class="mf">.</span><span class="s2">"'&gt;&lt;br&gt;
        Pa√≠s:&lt;input type='text' name='pais' value='"</span><span class="mf">.</span><span class="nv">$pais</span><span class="mf">.</span><span class="s2">"'&gt;&lt;br&gt;
        A√±o:&lt;input type='text' name='ano' value='"</span><span class="mf">.</span><span class="nv">$ano</span><span class="mf">.</span><span class="s2">"'&gt;&lt;br&gt;
        N√∫mero de p√°ginas:&lt;input type='text' name='numPaginas' value='"</span><span class="mf">.</span><span class="nv">$numPags</span><span class="mf">.</span><span class="s2">"'&gt;&lt;br&gt;"</span><span class="p">;</span>

<span class="k">echo</span> <span class="s2">"Autores: &lt;select name='autor[]' multiple size='3'&gt;"</span><span class="p">;</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$todosLosAutores</span> <span class="k">as</span> <span class="nv">$fila</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nb">in_array</span><span class="p">(</span><span class="nv">$fila</span><span class="o">-&gt;</span><span class="n">idPersona</span><span class="p">,</span> <span class="nv">$autoresLibro</span><span class="p">))</span>
        <span class="k">echo</span> <span class="s2">"&lt;option value='</span><span class="nv">$fila-&gt;idPersona</span><span class="s2">' selected&gt;</span><span class="nv">$fila-&gt;nombre</span><span class="s2"> </span><span class="nv">$fila-&gt;apellido</span><span class="s2">&lt;/option&gt;"</span><span class="p">;</span>
    <span class="k">else</span>
        <span class="k">echo</span> <span class="s2">"&lt;option value='</span><span class="nv">$fila-&gt;idPersona</span><span class="s2">'&gt;</span><span class="nv">$fila-&gt;nombre</span><span class="s2"> </span><span class="nv">$fila-&gt;apellido</span><span class="s2">&lt;/option&gt;"</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">echo</span> <span class="s2">"&lt;/select&gt;"</span><span class="p">;</span>

<span class="c1">// Finalizamos el formulario</span>
<span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$libro</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"  &lt;input type='hidden' name='action' value='modificarLibro'&gt;"</span><span class="p">;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s2">"  &lt;input type='hidden' name='action' value='insertarLibro'&gt;"</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">echo</span> <span class="s2">"	&lt;input type='submit'&gt;&lt;/form&gt;"</span><span class="p">;</span>
<span class="k">echo</span> <span class="s2">"&lt;p&gt;&lt;a href='index.php'&gt;Volver&lt;/a&gt;&lt;/p&gt;"</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="componentes-de-la-plantilla-cabecera-men√∫-de-navegaci√≥n-y-pie">Componentes de la plantilla: cabecera, men√∫ de navegaci√≥n y pie</h3>

<p>Aqu√≠ te ofrezco unas versiones m√≠nimas de estos componentes que aparecer√°n en todas las vistas. Obviamente, puedes mejorar el aspecto de la aplicaci√≥n retoc√°ndolos a tu gusto.</p>

<p><strong>views/header.php</strong></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"es"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/head&gt;</span>

<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>BIBLIOTECA<span class="nt">&lt;/h1&gt;</span>
</code></pre></div></div>

<p><strong>views/nav.php</strong></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;hr/&gt;</span>
<span class="nt">&lt;nav&gt;</span>
    Men√∫ de navegaci√≥n: 
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">'index.php'</span><span class="nt">&gt;</span>Home<span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">'index.php?action=mostrarListaLibros'</span><span class="nt">&gt;</span>Libros<span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">'index.php?action=mostrarListaAutores'</span><span class="nt">&gt;</span>Autores<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/nav&gt;</span>
<span class="nt">&lt;hr/&gt;</span>
</code></pre></div></div>

<p><strong>views/footer.php</strong></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h5&gt;</span>Este es el pie de p√°gina<span class="nt">&lt;/h5&gt;</span>
<span class="nt">&lt;h5&gt;</span><span class="ni">&amp;copy;</span> 2025 Yo mismo<span class="nt">&lt;/h5&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>
:ET