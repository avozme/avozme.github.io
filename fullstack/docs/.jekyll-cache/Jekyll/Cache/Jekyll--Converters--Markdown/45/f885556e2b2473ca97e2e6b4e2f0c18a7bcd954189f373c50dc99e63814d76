I"«<h2 class="no_toc" id="51-qu√©-es-un-framework">5.1. ¬øQu√© es un framework?</h2>

<ul id="markdown-toc">
  <li><a href="#511-realmente-necesito-un-framework-para-desarrollar-una-aplicaci√≥n-web" id="markdown-toc-511-realmente-necesito-un-framework-para-desarrollar-una-aplicaci√≥n-web">5.1.1. ¬øRealmente necesito un framework para desarrollar una aplicaci√≥n web?</a></li>
  <li><a href="#512-qu√©-framework-escoger" id="markdown-toc-512-qu√©-framework-escoger">5.1.2. ¬øQu√© framework escoger?</a></li>
</ul>

<p>Un <strong>framework</strong> es un conjunto estandarizado de pr√°cticas de programaci√≥n para resolver una serie de problemas habituales.</p>

<p>El framework proporciona una serie de <strong>clases, librer√≠as y otros componentes</strong> para facilitar el desarrollo √°gil, seguro y escalable de nuevas aplicaciones.</p>

<p>Por lo tanto, un <strong>framework MVC PHP</strong> es un conjunto de clases, librer√≠as y otros componentes destinados a servir de base para desarrollar aplicaciones en PHP con arquitectura MVC. La idea es esta: <em>no inventar la rueda cada vez que la necesitamos</em>.</p>

<h3 id="511-realmente-necesito-un-framework-para-desarrollar-una-aplicaci√≥n-web">5.1.1. ¬øRealmente necesito un framework para desarrollar una aplicaci√≥n web?</h3>

<p>No, los frameworks <em>nunca</em> son imprescindibles‚Ä¶</p>

<p>‚Ä¶<em>pero casi siempre son muy convenientes</em>.</p>

<p>Hay programadores pro-frameworks y anti-frameworks. Los programadores anti-frameworks acaban desarrollando, aposta o sin querer, su propio framework despu√©s de llevar varias aplicaciones MVC a sus espaldas.</p>

<p>Para decidir si necesitas un framework o no, tienes que conocer antes c√≥mo funcionan y qu√© ventajas e inconvenientes presentan.</p>

<p>Usar un framework tiene ciertas <strong>ventajas</strong>, como:</p>

<ul>
  <li>Reutilizaci√≥n del trabajo ya hecho (recuerda: no reinventar la rueda).</li>
  <li>Extensa documentaci√≥n.</li>
  <li>Separaci√≥n en capas.</li>
  <li>Seguimiento de buenas pr√°cticas de programaci√≥n.</li>
  <li>Escalabilidad y mantenimiento.</li>
  <li>Desarrollo m√°s r√°pido y, por tanto, m√°s econ√≥mico.</li>
</ul>

<p>Pero tambi√©n tiene algunos <strong>inconvenientes</strong>:</p>

<ul>
  <li>A veces pueden limitar el desarrollo.</li>
  <li>Curva de aprendizaje costosa (m√°s en unos frameworks que en otros). Es decir: al principio iremos m√°s lentos que sin framework, hasta que le cojamos el tranquillo.</li>
  <li>Puede llegar a implicar m√°s trabajo, dependiendo del proyecto.</li>
  <li>Preferencias personales: algunos programadores solo se sienten c√≥modos si todo el c√≥digo es suyo.</li>
  <li>Actualizaciones frecuentes e imprevistas. A menudo, la actualizaci√≥n de un framework hace que parte de tu aplicaci√≥n deje de funcionar.</li>
  <li>Ocultan gran parte del funcionamiento de la aplicaci√≥n: no son aptos para aprender a programar.</li>
</ul>

<p>En resumen: la idea es que, al usar un framework, solo te centras en desarrollar lo importante. El resto (lo que ya estaba desarrollado en el framework y que es com√∫n a muchas aplicaciones web) no te quita tiempo.</p>

<h3 id="512-qu√©-framework-escoger">5.1.2. ¬øQu√© framework escoger?</h3>

<p>Existen multitud de frameworks MVC PHP. Estos son algunos de gran implantaci√≥n en la actualidad:</p>

<ul>
  <li><strong>Symfony</strong>: el m√°s extendido desde hace a√±os.</li>
  <li><strong>Laravel</strong>: el que tiene un crecimiento m√°s r√°pido.</li>
  <li><strong>CodeIgniter</strong>: el m√°s sencillo, aunque su implantaci√≥n en la industria el menor.</li>
  <li>Otros framworks MVC PHP importantes son Zend Framework, Yii y CakePHP.</li>
</ul>

<p>Lamentablemente, no hay respuesta a la pregunta: ¬øqu√© framework es mejor?</p>

<p>Puedes pasar el resto de tu vida leyendo en foros y en blogs, descargando e instalando varios frameworks para desecharlos a los dos d√≠as, esperando a que salga una nueva versi√≥n o un framework nuevo‚Ä¶</p>

<p>Nunca podr√°s responder a esa pregunta. Como mucho, podr√°s responder a esta otra: ¬øqu√© framework prefiero? Y eso solo despu√©s de haber probado varios durante alg√∫n tiempo.</p>

<p>Adem√°s, el framework por s√≠ s√≥lo puede no ser suficiente para un desarrollo completo, y probablemente har√°n falta otros componentes que afectar√°n a la experiencia de programaci√≥n. Algunos ejemplos son:</p>

<ul>
  <li>Librer√≠as del lado del servidor: pear, pChart, doctrine‚Ä¶</li>
  <li>Librer√≠as del lado del cliente: jQuery, Vue.js, Angular, React, bootstrap‚Ä¶</li>
</ul>

:ET