/*
PROGRAMA:  Ajedrez 1.0
ARCHIVO:   io.h
CONTENIDO: Cabecera de las funciones de entrada/salida en modo texto
AUTOR:     Alfredo Moreno
*/

#ifndef _IO_H
#define _IO_H

#include <signal.h>
#include "tipos.h"
#ifdef GRAF_LINUX
#include "bitmaps.h"
#endif


// Funci�: inicializar_interfaz()
// Inicializa el interfaz. Debe invocarse antes que cualquier otra
// funci� del interfaz
int inicializar_interfaz();

// Funci�: finalizar_interfaz()
// Finaliza el interfaz. Debe invocarse antes de finalizar el programa.
void finalizar_interfaz();

// Funci�: refrescar_pantalla()
// Dibuja en la pantalla el estado actual del tablero
void refrescar_pantalla(Tcasilla tablero[9][9]);

// Funci�: dibujar_casilla()
// Dibuja un escaque del tablero con la figura que contiene
void dibujar_casilla(int x, int y, char tipo, char color_pieza, char color_casilla);

// Funci�: seleccionar_casilla()
// Permite seleccionar una casilla del tablero usando las teclas del cursor. Devuelve
// las coordenadas de la casilla seleccionada en (col,fila). Ser� (0,0) si se pulsa ESC
// (x_orig, y_orig) son coordenadas de origen, si es que ya se eligieron. Si no, ser� (0,0)
void seleccionar_casilla(int* col, int* fila, int x_orig, int y_orig, Tcasilla tablero[9][9]);

// Funci�: escribir()
// Escribe una cadena en el lugar de la pantalla destinado a mensajes al usuario
void escribir(char* texto, int fila);

// Funci�: leer()
// Lee una cadena en el lugar de la pantalla destinado a mensajes al usuario
void leer(char* texto, int fila);

// Funci�: borrar()
// Limpia una l�ea de la zona de la pantalla dedicada a mensajes al usuario.
// Si fila = 0 limpia toda la zona.
void borrar(int fila);


// ---------------------------------------------------------------------------------------
// MODO TEXTO LINUX
// ---------------------------------------------------------------------------------------
// En modo texto de Linux hay que definir los pares de colores para la librer� Ncurses
#ifdef TXT_LINUX
#define C_NEG_BLA 1	// Pieza negra sobre casilla blanca
#define C_NEG_NEG 2	// Pieza negra sobre casilla negra
#define C_BLA_BLA 3	// Pieza blanca sobre casilla blanca
#define C_BLA_NEG 4	// Pieza blanca sobre casilla negra
#define C_TXT 5		// Texto
#define C_SEL 6		// Selecci�
#endif



// ---------------------------------------------------------------------------------------
// MODO GR�ICO LINUX
// ---------------------------------------------------------------------------------------

// En modo gr�ico de Linux utilizaremos una variable global para acceder a la pantalla gr�ica virtual
// y otra para acceder a los p�eles
#ifdef GRAF_LINUX
#define TAM_PANT_X 667		// Tama� de la pantalla de juego en p�els
#define TAM_PANT_Y 500
#define TAM_CASILLA 55		// Tama� en p�els de cada escaque (casilla) del tablero
#define DESPLZ_ORIG_X 33	// Desplazamiento en X del primer escaque desde el origen (0,0)
#define DESPLZ_ORIG_Y 35	// Desplazamiento en Y del primer escaque desde el origen (0,0)
#define ANCHO_TEXTO 150		// Anchura (en X) del área de texto a la derecha de la pantalla
#define DESPLZ_ORIG_TXT 150	// Desplazamiento el comienzo del texto en Y
#define ALTO_LINEA_TXT 50	// Altura (Y) de cada línea de texto


// Funci�: cargar_imagenes()
// Carga las im�enes BMP del juego en las diferentes superficies
void cargar_imagenes();
// Funci�: error_imagen()
// Gestiona los errores durante la carga de las im�enes
void error_imagen(char* archivo);

// Macro: DIBUJAR_PIXEL()
// Dibuja un punto de color en la pantalla gr�ica
#define DIBUJAR_PIXEL(px,py,color) posicion = scr->pixels + py * scr->pitch + px * scr->format->BytesPerPixel; *posicion = color;

#endif

#endif
