I"Ç%<h2 class="no_toc" id="96-ejercicios-propuestos">9.6. Ejercicios propuestos</h2>

<ul id="markdown-toc">
  <li><a href="#961-ejercicios-b√°sicos" id="markdown-toc-961-ejercicios-b√°sicos">9.6.1. Ejercicios b√°sicos</a></li>
  <li><a href="#962-ejercicios-avanzados" id="markdown-toc-962-ejercicios-avanzados">9.6.2. Ejercicios avanzados</a></li>
</ul>

<h3 id="961-ejercicios-b√°sicos">9.6.1. Ejercicios b√°sicos</h3>

<h4 id="ejercicio-1-hola-mundo">Ejercicio 1. Hola mundo</h4>

<p>En este ejercicio, vamos a preparar nuestro entorno de trabajo.</p>

<ol>
  <li>
    <p>Instala Visual Studio Code. Puedes descargarlo de <a href="https://code.visualstudio.com/download">https://code.visualstudio.com/download</a> o bien instalarlo desde la tienda de aplicaciones de tu sistema operativo.</p>
  </li>
  <li>
    <p>Abre Visual Studio Code y haz clic en el bot√≥n de extensiones (en el panel izquierdo). Busca una extensi√≥n llamada ‚ÄúC/C++ IntelliSense‚Äù e inst√°lala.</p>
  </li>
  <li>
    <p>Escribe un programa que salude con un ‚ÄúHola, mundo‚Äù. Encontrar√°s el c√≥digo m√°s abajo. Este programa es un cl√°sico en el mundillo de la programaci√≥n; siempre se usa para comprobar si un nuevo entorno de desarrollo est√° funcionando bien.</p>
  </li>
  <li>
    <p>Ejec√∫talo y aseg√∫rate de que el resultado es el esperado. Si algo falla, llama al profesor y no pases al siguiente ejercicio hasta dejar tu Visual Studio Code en perfecto estado de funcionamiento.</p>
  </li>
</ol>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
</span><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
   <span class="n">printf</span><span class="p">(</span><span class="s">"Hola, mundo</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
   <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="ejercicio-2-convertir-de-euros-a-d√≥lares">Ejercicio 2. Convertir de euros a d√≥lares</h4>

<p>Vamos a empezar por algo sencillito.</p>

<p>Escribe un programa en C capaz de leer un n√∫mero real y un tipo de moneda, que puede ser ‚Äúeuro‚Äù o ‚Äúd√≥lar‚Äù, y que convierta al tipo de moneda indicado, suponiendo que est√° expresada en la otra.</p>

<p>Por ejemplo, si la cantidad es 15 y la moneda es ‚Äúd√≥lar‚Äù, se supondr√° que se trata de 15 ‚Ç¨ y que hay que convertirlos a d√≥lares.</p>

<p>Utiliza el tipo de cambio que est√© vigente el d√≠a en el que escribas el programa.&lt;/div&gt;</p>

<h4 id="ejercicio-3-tabla-de-multiplicar">Ejercicio 3. Tabla de multiplicar</h4>

<p>Escribe un programa en C que pida un n√∫mero y muestre la tabla de multiplicar de ese n√∫mero.</p>

<p>Por ejemplo, si el usuario del programa escribe el n√∫mero 3, la salida del programa debe ser:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
3 x 4 = 12
3 x 5 = 15
3 x 6 = 18
3 x 7 = 21
3 x 8 = 24
3 x 9 = 27
3 x 10 = 30
</code></pre></div></div>

<p>Entre los ejercicios resueltos encontrar√°s uno que utiliza bucles y que puedes usar como modelo para hacer este.</p>

<h4 id="ejercicio-4-juego-del-n√∫mero-secreto">Ejercicio 4. Juego del n√∫mero secreto</h4>

<p>Ahora algo solo un poquito m√°s complicado: una versi√≥n en C del cl√°sico juego del n√∫mero secreto.</p>

<p>Se trata de un juego en el que el ordenador ‚Äúpiensa‚Äù un n√∫mero al azar entre 1 y 100 y el jugador tiene que adivinarlo.</p>

<p>Cada vez que el jugador escribe un n√∫mero, el programa le dice: ‚ÄúMi n√∫mero secreto es mayor‚Äù o ‚ÄúMi n√∫mero secreto es menor‚Äù.</p>

<p>Cuando el jugador por fin acierta, el ordenador le dice: ‚ÄúEnhorabuena, has acertado‚Äù, y a√±ade el n√∫mero de intentos que ha necesitado para acertar el n√∫mero secreto.</p>

<h4 id="ejercicio-5-calculadora-de-edad">Ejercicio 5. Calculadora de edad</h4>

<p>Escribe un programa que te pregunte tu fecha de nacimiento y la fecha actual. Luego, tiene que decirte cu√°l es tu edad EXACTA, en a√±os, meses y d√≠as.</p>

<h4 id="ejercicio-6-estad√≠stica-b√°sica">Ejercicio 6. Estad√≠stica b√°sica</h4>

<p>Escribe un programa que utilice un array de 30 n√∫meros enteros para almacenar la estatura de los 30 estudiantes de una clase de bachillerato.</p>

<p>Posteriormente, el programa preguntar√° al usuario las estaturas de los 30 estudiantes (en cent√≠metros) y las almacenar√° en el array. Despu√©s, mostrar√° la estatura del m√°s alto, la del m√°s bajo, el promedio, la mediana y la moda.</p>

<p>Recuerda que:</p>

<ul>
  <li>El promedio se calcula sumando todas las estaturas y dividi√©ndolas entre 30.</li>
  <li>La mediana es el n√∫mero intermedio de un grupo de n√∫meros.</li>
  <li>La moda es el n√∫mero de la serie que aparece con mayor frecuencia.</li>
</ul>

<p>Entre los ejercicios resueltos, encontrar√°s uno que utiliza arrays y que puedes usar como modelo para hacer este.</p>

<h3 id="962-ejercicios-avanzados">9.6.2. Ejercicios avanzados</h3>

<h4 id="ejercicio-7-pelota-que-rebota">Ejercicio 7. Pelota que rebota</h4>

<p>Escribe un programa en C que muestre una pelota movi√©ndose por la pantalla y rebotando en sus bordes. La pelota se puede simular con el car√°cter ‚ÄúO‚Äù, escribi√©ndolo en diferentes celdas de la pantalla cada vez.</p>

<p>(Para este ejercicio necesitar√°s usar la librer√≠a <em>ncurses</em>)</p>

<p>Puedes realizar el programa en tres fases sucesivas. Para aprobar la actividad debes completar al menos la primera fase. Para sacar un 10 tienes que terminar la tercera fase.</p>

<ul>
  <li>FASE 1: la ‚Äúpelota‚Äù se mueve y rebota por la pantalla, pero va dejando un ‚Äúrastro‚Äù de Oes.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>O           O
 O         O O
  O       O   O
   O     O
    O   O
     O O
      O
</code></pre></div></div>

<ul>
  <li>FASE 2: la ‚Äúpelota‚Äù se mueve por la pantalla sin dejar rastro. Es decir, cada vez que se escribe la ‚ÄúO‚Äù en una nueva posici√≥n, se borra de la posici√≥n que ocupaba anteriormente. El resultado debe dar sensaci√≥n de movimiento sin parpadeos.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>           O


</code></pre></div></div>

<p>FASE 3: la ‚Äúpelota‚Äù se mueve por la pantalla dejando una ‚Äúestela‚Äù de cuatro o cinco ‚ÄúOes‚Äù (u otros caracteres, como en la figura) a su paso.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      .
       .
        o
         o
          O


</code></pre></div></div>

<h4 id="ejercicio-8-juego-de-automovilismo">Ejercicio 8. Juego de automovilismo</h4>

<p>Escribe un programa que simule un sencillo juego de automovilismo. La pantalla del juego debe tener un aspecto parecido a este:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                              |         |
                              |         |
                              |         |
                              |         |
                               |         |
                               |         |
                                |         |
                                 |         |
                                 |         |
                                 |         |
                                |         |
                                |    H    |
</code></pre></div></div>

<p>El jugador (cuyo veh√≠culo representaremos con una H) puede mover su coche hacia la izquierda y hacia la derecha. Su objetivo es no salirse de la carretera, que tiene los l√≠mites marcados por un car√°cter ‚Äú|‚Äù a cada lado. Si se sale, pierde una vida. Si pierde tres vidas, la partida termina y el programa debe mostrar el tiempo que el conductor ha conseguido aguantar sin perder sus vidas.</p>

<p>La carretera se va desplazando de abajo a arriba, aprovech√°ndose del scroll propio de la pantalla de texto. La carretera no debe ser recta, sino que tendr√° irregularidades, como las mostradas en la figura, generadas al azar.</p>

<h4 id="ejercicio-9-proyecto">Ejercicio 9: Proyecto.</h4>

<p>En lugar de continuar haciendo ejercicios de programaci√≥n chorras, vamos a plantear un peque√±o proyecto individual.</p>

<p>La idea es que cada uno/una elija un proyecto y <strong>lo desarrolle en lo que queda de curso</strong>. Se trata de programas un poco m√°s grandes que los ejercicios anteriores, pero no tan grandes que no se puedan afrontar con √©xito.</p>

<p>A continuaci√≥n te propongo una lista de proyectos posibles basados en <strong>juegos cl√°sicos</strong>. Si no encuentras nada que te guste, puedes elegir tu propio proyecto (antes de darlo por bueno, com√©ntalo con el profesor).</p>

<p>Puedes empezar por una versi√≥n muy simple del programa (sin usar gr√°ficos, que funcione m√≠nimamente, etc) y, dependiendo del tiempo que tengas disponible, ir ampliando sus funcionalidades y mejorando su aspecto visual. O incluso a√±adir efectos de sonido.</p>

<ul>
  <li>Hundir la flota</li>
  <li>Snake</li>
  <li>Buscaminas</li>
  <li>Pong</li>
  <li>Ahorcado</li>
  <li>Damas</li>
  <li>Ajedrez</li>
  <li>Space Invaders</li>
  <li>Tetris</li>
  <li>Tenis</li>
  <li>Palabras cruzadas</li>
  <li>Otros (libre elecci√≥n -&gt; <em>comentar con el profesor</em>).</li>
</ul>
:ET